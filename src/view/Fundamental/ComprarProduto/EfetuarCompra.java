/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Fundamental.ComprarProduto;

import controle.ControleCompraProduto;
import java.awt.Color;
import java.awt.Font;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import view.buscar.BuscarFornecedor;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

import javax.swing.table.DefaultTableModel;
import modelo.CompraProduto;
import modelo.Fornecedor;
import modelo.ItemCompra;
import modelo.Pagamento;
import modelo.Produto;
import view.buscar.BuscarProduto;
import view.buscar.BuscarProdutoCompra;

/**
 *
 * @author Maycon
 */
public class EfetuarCompra extends javax.swing.JDialog {

    /**
     * Creates new form EfetuarCompra
     */
    private Fornecedor fornecedor;

    private Produto produtoAtual;

    private ArrayList<ItemCompra> listItem = new ArrayList<>();

    private ArrayList<Pagamento> listPagamento = new ArrayList<>();
    private Date hoje;
    private int linhaParcela = -1;
    private Pagamento p;
    private CompraProduto novaCompra = new CompraProduto();
    private SimpleDateFormat formatar = new SimpleDateFormat("dd/MM/yyyy");

    private DefaultTableModel modelo;
    private DefaultTableModel parcela;
    private int linhaSelecionadaAlterar = -1;
    private double total = 0;

    private int quantiParce = 0;

    DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
    DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();

    public EfetuarCompra(java.awt.Frame parent, boolean modal, CompraProduto p) {
        super(parent, modal);
        initComponents();
        modelo = (DefaultTableModel) tabProduto.getModel();
        parcela = (DefaultTableModel) tabParcelas.getModel();
        if (p == null) {
            hoje = new Date();
            labDataCompra.setText(String.valueOf(formatar.format(hoje)));
            labValorPagar.setText("00,00");
            darTamanhoAColuna();
            editarCampos();
            jDateAlterarVencimento.setEnabled(false);
            txtValorParcela.setEditable(false);
        } else {
            listItem.addAll(p.getListaCompra());
            atualizaTabela(listItem);
            calculaTotal();
            listPagamento.addAll(p.getListaParcela());
            atualizaTabelaParcela(listPagamento);
            botSalvar.setVisible(false);

            txtNumeroNotaFiscal.setText(String.valueOf(p.getNotaFiscalFornecedor()));
            labNomeFornecedor.setText(p.getFornecedorCod().getFornecedorRazaoSicial());
            editarConsulta();
            editarCampos();
            // parent.setSize(new Dimension(714,300));

            labDataCompra.setText(formatar.format(p.getDataCompra()));

        }

        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        direita.setBackground(new java.awt.Color(209, 209, 209));
        direita.setForeground(new java.awt.Color(102, 102, 102));
        tabProduto.getColumnModel().getColumn(1).setCellRenderer(direita);
        tabProduto.getColumnModel().getColumn(2).setCellRenderer(direita);
        tabProduto.getColumnModel().getColumn(3).setCellRenderer(direita);
        tabProduto.setFont(new Font("SansSerif", 0, 14));
        

        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        esquerda.setBackground(new java.awt.Color(209, 209, 209));
        esquerda.setForeground(new java.awt.Color(102, 102, 102));
        tabProduto.getColumnModel().getColumn(0).setCellRenderer(esquerda);
        // Border emptyBorder = null;

        // direita.setBorder(emptyBorder);
        tabParcelas.getColumnModel().getColumn(0).setCellRenderer(direita);
        tabParcelas.getColumnModel().getColumn(1).setCellRenderer(direita);
        tabParcelas.setFont(new Font("SansSerif", 1, 14));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        rSPanelGradiente1 = new rspanelgradiente.RSPanelGradiente();
        botFecharNormal2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        painelFornecedor = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labNomeFornecedor = new javax.swing.JLabel();
        botBuscarFornecedor = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        labDataCompra = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNumeroNotaFiscal = new javax.swing.JTextField();
        painelItemCompra = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        botBuscarProduto = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jSpinQuantProduto = new com.toedter.components.JSpinField();
        botAdicionar = new javax.swing.JButton();
        botExcluir = new javax.swing.JButton();
        labNomeProduto = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dataVencimentoProduto = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabProduto = new rojerusan.RSTableMetro();
        jLabel13 = new javax.swing.JLabel();
        txtValorCompra = new javax.swing.JTextField();
        painelParcelas = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jSpinQuantParcela = new com.toedter.components.JSpinField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        dataVencimento = new com.toedter.calendar.JDateChooser();
        labValorPagar = new javax.swing.JLabel();
        botParcelar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabParcelas = new rojerusan.RSTableMetro();
        jPanel2 = new javax.swing.JPanel();
        botSalvarAlteracaoParcelas = new javax.swing.JButton();
        txtValorParcela = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jDateAlterarVencimento = new com.toedter.calendar.JDateChooser();
        botAlterarParcela = new javax.swing.JButton();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        botCancelar = new javax.swing.JButton();
        botSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        botFecharNormal2.setBackground(new java.awt.Color(255, 0, 0));
        botFecharNormal2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/fechar34px.png"))); // NOI18N
        botFecharNormal2.setContentAreaFilled(false);
        botFecharNormal2.setFocusable(false);
        botFecharNormal2.setOpaque(true);
        botFecharNormal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botFecharNormal2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NOVA COMPRA");

        javax.swing.GroupLayout rSPanelGradiente1Layout = new javax.swing.GroupLayout(rSPanelGradiente1);
        rSPanelGradiente1.setLayout(rSPanelGradiente1Layout);
        rSPanelGradiente1Layout.setHorizontalGroup(
            rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rSPanelGradiente1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botFecharNormal2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        rSPanelGradiente1Layout.setVerticalGroup(
            rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelGradiente1Layout.createSequentialGroup()
                .addComponent(botFecharNormal2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
        );

        painelFornecedor.setBackground(new java.awt.Color(255, 255, 255));
        painelFornecedor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setText("FORNECEDOR:");

        labNomeFornecedor.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N

        botBuscarFornecedor.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botBuscarFornecedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/buscarPessoa18px.png"))); // NOI18N
        botBuscarFornecedor.setText("BUSCAR");
        botBuscarFornecedor.setFocusable(false);
        botBuscarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botBuscarFornecedorActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setText("DATA DA COMPRA:");

        labDataCompra.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel6.setText("DADOS DA COMPRA");

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("Nr. da Fiscal:");

        txtNumeroNotaFiscal.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N

        javax.swing.GroupLayout painelFornecedorLayout = new javax.swing.GroupLayout(painelFornecedor);
        painelFornecedor.setLayout(painelFornecedorLayout);
        painelFornecedorLayout.setHorizontalGroup(
            painelFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFornecedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labNomeFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelFornecedorLayout.createSequentialGroup()
                        .addComponent(labDataCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(170, 170, 170)
                        .addComponent(jLabel2)
                        .addGap(0, 30, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botBuscarFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumeroNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
            .addGroup(painelFornecedorLayout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(jLabel6)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        painelFornecedorLayout.setVerticalGroup(
            painelFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFornecedorLayout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(5, 5, 5)
                .addGroup(painelFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labNomeFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(botBuscarFornecedor))
                .addGap(5, 5, 5)
                .addGroup(painelFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labDataCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumeroNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        painelItemCompra.setBackground(new java.awt.Color(255, 255, 255));
        painelItemCompra.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Itens de Compra", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12))); // NOI18N

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setText("BUSCAR PRODUTO:");

        botBuscarProduto.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botBuscarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/buscar18px.png"))); // NOI18N
        botBuscarProduto.setText("Buscar Produto");
        botBuscarProduto.setFocusable(false);
        botBuscarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botBuscarProdutoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setText("QUANTIDADE:");

        jSpinQuantProduto.setValue(1);

        botAdicionar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        botAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/maisAzul18px.png"))); // NOI18N
        botAdicionar.setText("ADICIONAR");
        botAdicionar.setFocusable(false);
        botAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botAdicionarActionPerformed(evt);
            }
        });

        botExcluir.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        botExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/delete18px.png"))); // NOI18N
        botExcluir.setText("EXCLUIR");
        botExcluir.setFocusable(false);
        botExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botExcluirActionPerformed(evt);
            }
        });

        labNomeProduto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel9.setText("VALIDADE DO PRODUTO:");

        dataVencimentoProduto.setBackground(new java.awt.Color(255, 255, 255));
        dataVencimentoProduto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dataVencimentoProduto.setToolTipText("");
        dataVencimentoProduto.setAutoscrolls(true);
        dataVencimentoProduto.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        dataVencimentoProduto.setOpaque(false);

        jScrollPane3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tabProduto.setAutoCreateRowSorter(true);
        tabProduto.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tabProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Valor Compra", "Quantidade", "subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabProduto.setAltoHead(40);
        tabProduto.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tabProduto.setAutoscrolls(false);
        tabProduto.setColorBackgoundHead(new java.awt.Color(250, 250, 250));
        tabProduto.setColorFilasBackgound1(new java.awt.Color(209, 209, 209));
        tabProduto.setColorFilasBackgound2(new java.awt.Color(209, 209, 209));
        tabProduto.setColorFilasForeground1(new java.awt.Color(102, 102, 102));
        tabProduto.setColorFilasForeground2(new java.awt.Color(102, 102, 102));
        tabProduto.setColorForegroundHead(new java.awt.Color(51, 51, 51));
        tabProduto.setColorSelBackgound(new java.awt.Color(40, 53, 147));
        tabProduto.setFuenteFilas(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tabProduto.setFuenteFilasSelect(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tabProduto.setFuenteHead(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tabProduto.setGridColor(new java.awt.Color(204, 204, 204));
        tabProduto.setGrosorBordeFilas(0);
        tabProduto.setGrosorBordeHead(0);
        tabProduto.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tabProduto.setMultipleSeleccion(false);
        tabProduto.setOpaque(false);
        tabProduto.setRowHeight(30);
        tabProduto.setSelectionBackground(new java.awt.Color(40, 53, 147));
        tabProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabProdutoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabProduto);
        if (tabProduto.getColumnModel().getColumnCount() > 0) {
            tabProduto.getColumnModel().getColumn(1).setResizable(false);
            tabProduto.getColumnModel().getColumn(2).setResizable(false);
            tabProduto.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel13.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel13.setText("VALOR DE COMPRA:");

        txtValorCompra.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N

        javax.swing.GroupLayout painelItemCompraLayout = new javax.swing.GroupLayout(painelItemCompra);
        painelItemCompra.setLayout(painelItemCompraLayout);
        painelItemCompraLayout.setHorizontalGroup(
            painelItemCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelItemCompraLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(botAdicionar)
                .addGap(1, 1, 1)
                .addComponent(botExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(painelItemCompraLayout.createSequentialGroup()
                .addGroup(painelItemCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelItemCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelItemCompraLayout.createSequentialGroup()
                        .addComponent(txtValorCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSpinQuantProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dataVencimentoProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelItemCompraLayout.createSequentialGroup()
                        .addComponent(labNomeProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botBuscarProduto))))
        );
        painelItemCompraLayout.setVerticalGroup(
            painelItemCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelItemCompraLayout.createSequentialGroup()
                .addGroup(painelItemCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(botBuscarProduto)
                    .addComponent(jLabel7)
                    .addComponent(labNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(painelItemCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(dataVencimentoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jSpinQuantProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtValorCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(2, 2, 2)
                .addGroup(painelItemCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(botExcluir)
                    .addComponent(botAdicionar))
                .addGap(1, 1, 1)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        painelParcelas.setBackground(new java.awt.Color(255, 255, 255));
        painelParcelas.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Parcelas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel10.setText("Quantidade:");

        jSpinQuantParcela.setValue(1);

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel11.setText("Valor Pagar:");

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel12.setText("Primeiro Vencimento:");

        dataVencimento.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N

        labValorPagar.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        labValorPagar.setForeground(new java.awt.Color(255, 0, 0));

        botParcelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botParcelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/divisão18px.png"))); // NOI18N
        botParcelar.setText("GERAR PARCELAS");
        botParcelar.setFocusable(false);
        botParcelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botParcelarActionPerformed(evt);
            }
        });

        jScrollPane4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tabParcelas.setAutoCreateRowSorter(true);
        tabParcelas.setBackground(new java.awt.Color(250, 250, 250));
        tabParcelas.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tabParcelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Parcela", "Valor", "Data Vencimento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabParcelas.setAltoHead(40);
        tabParcelas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tabParcelas.setAutoscrolls(false);
        tabParcelas.setColorBackgoundHead(new java.awt.Color(250, 250, 250));
        tabParcelas.setColorFilasBackgound1(new java.awt.Color(209, 209, 209));
        tabParcelas.setColorFilasBackgound2(new java.awt.Color(209, 209, 209));
        tabParcelas.setColorFilasForeground1(new java.awt.Color(102, 102, 102));
        tabParcelas.setColorFilasForeground2(new java.awt.Color(102, 102, 102));
        tabParcelas.setColorForegroundHead(new java.awt.Color(51, 51, 51));
        tabParcelas.setColorSelBackgound(new java.awt.Color(40, 53, 147));
        tabParcelas.setFuenteFilas(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tabParcelas.setFuenteFilasSelect(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tabParcelas.setFuenteHead(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tabParcelas.setGridColor(new java.awt.Color(204, 204, 204));
        tabParcelas.setGrosorBordeFilas(0);
        tabParcelas.setGrosorBordeHead(0);
        tabParcelas.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tabParcelas.setMultipleSeleccion(false);
        tabParcelas.setOpaque(false);
        tabParcelas.setRowHeight(30);
        tabParcelas.setSelectionBackground(new java.awt.Color(40, 53, 147));
        tabParcelas.getTableHeader().setReorderingAllowed(false);
        tabParcelas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabParcelasMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabParcelas);
        if (tabParcelas.getColumnModel().getColumnCount() > 0) {
            tabParcelas.getColumnModel().getColumn(0).setResizable(false);
            tabParcelas.getColumnModel().getColumn(1).setResizable(false);
            tabParcelas.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        botSalvarAlteracaoParcelas.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        botSalvarAlteracaoParcelas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/ok18px.png"))); // NOI18N
        botSalvarAlteracaoParcelas.setText("SALVAR PARCELAS");
        botSalvarAlteracaoParcelas.setFocusable(false);
        botSalvarAlteracaoParcelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botSalvarAlteracaoParcelasActionPerformed(evt);
            }
        });

        txtValorParcela.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txtValorParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorParcelaActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel15.setText("Valor da Parcela:");

        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel14.setText("Vencimento:");

        jDateAlterarVencimento.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N

        botAlterarParcela.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        botAlterarParcela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/edit18px.png"))); // NOI18N
        botAlterarParcela.setText("ALTERAR PARCELAS");
        botAlterarParcela.setFocusable(false);
        botAlterarParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botAlterarParcelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botAlterarParcela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botSalvarAlteracaoParcelas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtValorParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateAlterarVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botAlterarParcela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDateAlterarVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtValorParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botSalvarAlteracaoParcelas)
                .addContainerGap())
        );

        javax.swing.GroupLayout painelParcelasLayout = new javax.swing.GroupLayout(painelParcelas);
        painelParcelas.setLayout(painelParcelasLayout);
        painelParcelasLayout.setHorizontalGroup(
            painelParcelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelParcelasLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(painelParcelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botParcelar)
                    .addGroup(painelParcelasLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(painelParcelasLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labValorPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinQuantParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        painelParcelasLayout.setVerticalGroup(
            painelParcelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelParcelasLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(painelParcelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(labValorPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jSpinQuantParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botParcelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelParcelasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        kGradientPanel1.setkEndColor(new java.awt.Color(40, 53, 147));
        kGradientPanel1.setkStartColor(new java.awt.Color(26, 35, 126));

        botCancelar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        botCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/cancel18px.png"))); // NOI18N
        botCancelar.setText("CANCELAR");
        botCancelar.setFocusable(false);
        botCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botCancelarActionPerformed(evt);
            }
        });

        botSalvar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        botSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/salvar18px.png"))); // NOI18N
        botSalvar.setText("SALVAR");
        botSalvar.setFocusable(false);
        botSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(botCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botCancelar)
                    .addComponent(botSalvar)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanelGradiente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(painelFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(painelItemCompra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(painelParcelas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(rSPanelGradiente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(painelFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(painelItemCompra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelParcelas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1)
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botFecharNormal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botFecharNormal2ActionPerformed

        dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_botFecharNormal2ActionPerformed

    private void botBuscarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botBuscarProdutoActionPerformed

        BuscarProdutoCompra busProd = new BuscarProdutoCompra(null, true, true, listItem);
        busProd.setVisible(true);

        if (busProd.getTipoSelecionado() != null) {

            produtoAtual = busProd.getTipoSelecionado();

            labNomeProduto.setText(produtoAtual.getProdutoNome());
        } else {

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_botBuscarProdutoActionPerformed

    private void botParcelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botParcelarActionPerformed
        Date hj;
        hj = new Date();
        if (hj.compareTo(dataVencimento.getDate()) == -1) {
            if (!listItem.isEmpty()) {
                int quant = jSpinQuantParcela.getValue();
                quantiParce = quant;
                double calcula;
                String valorTotal = labValorPagar.getText();
                valorTotal = valorTotal.replaceAll(",", ".");
                calcula = Double.parseDouble(valorTotal);
                if (calcula % quant == 0) {
                    if (!(dataVencimento.getDate() == null)) {
                        Calendar x = dataVencimento.getCalendar();
                        listPagamento.clear();
                        double pagar = calcula / quant;
                        for (int i = 1; i <= quant; i++) {
                            Pagamento pag = new Pagamento();
                            pag.setNumeroParcela(i);
                            pag.setDataVencimento(x.getTime());
                            System.out.println(x.getTime());
                            pag.setValorPagar(pagar);
                            listPagamento.add(pag);
                            x.add(Calendar.MONTH, 1);
                        }
                        atualizaTabelaParcela(listPagamento);
                        limpaCamposParcela();
                    } else {
                        JOptionPane.showMessageDialog(null, "ENTRE COM A INFORMAÇÃO DA DATA DE VENCIMENTO DA PRIMEIRA PARCELA");
                    }
                } else {
                    if (!(dataVencimento.getDate() == null)) {
                        Calendar x = dataVencimento.getCalendar();
                        listPagamento.clear();
                        double pagar = calcula / quant;
                        double pagarUltima = 0;
                        String d = format(pagar);
                        d = d.replaceAll(",", ".");
                        double convertido = Double.parseDouble(d);
                        for (int i = 1; i <= quant; i++) {
                            Pagamento pag = new Pagamento();
                            pag.setNumeroParcela(i);
                            pag.setDataVencimento(x.getTime());
                            if (i == quant) {
                                pagar = calcula - pagarUltima;
                                String a = format(pagar);
                                a = a.replaceAll(",", ".");
                                pag.setValorPagar(Double.parseDouble(a));
                            } else {
                                pagar = convertido;
                                pagarUltima = pagarUltima + convertido;
                                pag.setValorPagar(pagar);
                            }
                            listPagamento.add(pag);
                            x.add(Calendar.MONTH, 1);
                        }
                        atualizaTabelaParcela(listPagamento);
                        limpaCamposParcela();
                    } else {
                        JOptionPane.showMessageDialog(null, "ENTRE COM A INFORMAÇÃO DA DATA DE VENCIMENTO DA PRIMEIRA PARCELA");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "ENTRE COM AS INFORMAÇÕES DOS PRODUTOS COMPRADOS!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "DATA DE VENCIMENTO INÍCIAL DA PARCELA INVÁLIDA!");
        }

    }//GEN-LAST:event_botParcelarActionPerformed

    private void botCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botCancelarActionPerformed

        dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_botCancelarActionPerformed

    private void botSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botSalvarActionPerformed
        double valorParcela = calculaValorParcela();

        double valorCompra = calculaValorCompra();

        if (valorParcela == valorCompra) {
            novaCompra.setDataCompra(hoje);
            if (!(fornecedor == null)) {
                novaCompra.setFornecedorCod(fornecedor);
                if (!listItem.isEmpty()) {
                    novaCompra.setListaCompra(listItem);
                    if (!labValorPagar.getText().equals("")) {
                        double calcula;
                        String valorTotal = labValorPagar.getText();
                        valorTotal = valorTotal.replaceAll(",", ".");
                        calcula = Double.parseDouble(valorTotal);

                        novaCompra.setValorTotal(calcula);
                        if (!txtNumeroNotaFiscal.getText().equals("")) {
                            try {
                                novaCompra.setNotaFiscalFornecedor(Integer.parseInt(txtNumeroNotaFiscal.getText()));
                                int x = jSpinQuantParcela.getValue();
                                if (x >= 1) {
                                    novaCompra.setQuantParcela(quantiParce);
                                    if (!listPagamento.isEmpty()) {
                                        novaCompra.setListaParcela(listPagamento);
                                        ControleCompraProduto contComP = new ControleCompraProduto();
                                        contComP.gravarNovo(novaCompra);

                                        dispose();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "POR FAVOR ENTRE COM AS PARCELAS DO PAGAMENTO");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "QUANTIDADE DA PARCELAS NÃO PODE SER INFERIOR A 1");
                                }
                            } catch (NumberFormatException e) {
                                JOptionPane.showMessageDialog(null, "DIGITE APENAS NUMEROS PARA A NOTA FISCAL!");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "ENTRE COM O NÚMERO DA NOTA FISCAL!");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "REGISTRE VALORES DE COMPRA PARA OS PRODUTOS");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "REGISTRE OS PRODUTOS COMPRADOS");
                }
            } else {
                JOptionPane.showMessageDialog(null, "SELECIONE UM FORNECEDOR");
            }
        } else {
            JOptionPane.showMessageDialog(null, "VALOR DAS PARCELAS NÃO CONDIZ COM O VALOR A PAGAR PELA COMPRA");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_botSalvarActionPerformed

    private void botAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botAdicionarActionPerformed

        int quantCompra = jSpinQuantProduto.getValue();
        if (!(quantCompra == 0)) {
            ItemCompra itemCom = new ItemCompra();
            itemCom.setQuantidade(quantCompra);
            if (!(dataVencimentoProduto.getDate() == null)) {

                Date hj = new Date();

                if (compareTo(dataVencimentoProduto.getDate(), hj) == 1) {
                    try {
                        itemCom.setDataVencimento(dataVencimentoProduto.getDate());
                        itemCom.setNotificar('n');
                        if (produtoAtual != null) {
                            if (!txtValorCompra.getText().equals("")) {
                                try {
                                    String valor = txtValorCompra.getText();
                                    String comVirgula = valor.replace(',', '.');
                                    itemCom.setValor(Double.parseDouble(comVirgula));
                                    itemCom.setProdutoCod(produtoAtual);
                                    listItem.add(itemCom);
                                    atualizaTabela(listItem);
                                    calculaTotal();
                                    limparCampos();
                                    labNomeProduto.setText("");
                                } catch (NumberFormatException e) {
                                    JOptionPane.showMessageDialog(null, "DIGITE O VALOR DA COMPRA");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "ENTRE COM O VALOR DE COMPRA DO PRODUTO");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "ENTRE COM AS INFORMAÇÕES DO PRODUTO");
                        }

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "ENTRE COM O VALOR ADEQUALDO PARA DATA");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "DATA DE VENCIMENTO TEM QUE SER MAIOR QUE O DIA DE HOJE!");
                }

            } else {
                if (produtoAtual != null) {
                    if (!txtValorCompra.getText().equals("")) {
                        try {
                            String valor = txtValorCompra.getText();
                            String comVirgula = valor.replace(',', '.');
                            itemCom.setValor(Double.parseDouble(comVirgula));
                            itemCom.setProdutoCod(produtoAtual);
                            listItem.add(itemCom);
                            atualizaTabela(listItem);
                            calculaTotal();
                            limparCampos();
                        } catch (NumberFormatException e) {
                            JOptionPane.showMessageDialog(null, "DIGITE O VALOR DA COMPRA");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "ENTRE COM O VALOR DE COMPRA DO PRODUTO");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "ENTRE COM AS INFORMAÇÕES DO PRODUTO");
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "DIGITE UM QUANTIDADE DESTE PRODUTO COMPRADO MAIOR QUE 0");
        }
    }//GEN-LAST:event_botAdicionarActionPerformed

    private void botBuscarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botBuscarFornecedorActionPerformed
        BuscarFornecedor busFornecedor;
        busFornecedor = new BuscarFornecedor(null, true);
        busFornecedor.setVisible(true);
        if (busFornecedor.getTipoSelecionado() != null) {
            fornecedor = busFornecedor.getTipoSelecionado();
            labNomeFornecedor.setText(fornecedor.getFornecedorNomeFantasia());
        } else {

        }
    }//GEN-LAST:event_botBuscarFornecedorActionPerformed

    private void botExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botExcluirActionPerformed
        int linha;

        linha = tabProduto.getSelectedRow();

        if (linha == -1) {
            JOptionPane.showMessageDialog(this, "SELECIONE UM ITEM NA TABELA PARA SER EXCLUIDO");
        } else {

            listItem.remove(linha);
            atualizaTabela(listItem);
            calculaTotal();
        }
    }//GEN-LAST:event_botExcluirActionPerformed

    private void botAlterarParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botAlterarParcelaActionPerformed

        if (!listPagamento.isEmpty()) {
            int linha = -1;
            linha = tabParcelas.getSelectedRow();
            if (linha != -1) {
                tabParcelas.setEnabled(false);
                jDateAlterarVencimento.setEnabled(true);
                txtValorParcela.setEditable(true);
            } else {
                JOptionPane.showMessageDialog(null, "SELECIONE UMA PARCELA PARA SER ALTERADA!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "NÃO TEM PARCELAS PARA SEREM ALTERADAS!");
        }

    }//GEN-LAST:event_botAlterarParcelaActionPerformed

    private void txtValorParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorParcelaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorParcelaActionPerformed

    private void botSalvarAlteracaoParcelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botSalvarAlteracaoParcelasActionPerformed

        String valor = txtValorParcela.getText();
        String comVirgula = valor.replace(',', '.');
        if (!(jDateAlterarVencimento.getDate() == null)) {
            p.setDataVencimento(jDateAlterarVencimento.getDate());
            try {
                p.setValorPagar(Double.parseDouble(comVirgula));
                listPagamento.set(linhaParcela, p);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "DIGITE SOMENTE NUMEROS!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "ENTRE COM A DATA NOVA DE VENCIMENTO!");
        }
        atualizaTabelaParcela(listPagamento);
        limpaCamposParcelaAlterar();
    }//GEN-LAST:event_botSalvarAlteracaoParcelasActionPerformed

    private void tabProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabProdutoMouseClicked

//        linhaSelecionadaAlterar = tabProduto.getSelectedRow();
//        if (linhaSelecionadaAlterar != -1) {
//            ItemCompra i = listItem.get(linhaSelecionadaAlterar);
//            String valor = String.valueOf(i.getValor());
//            String comVirgula = valor.replace('.', ',');
//
//            txtValorCompra.setText(format(i.getValor()));
//            produtoAtual = i.getProdutoCod();
//            jSpinQuantProduto.setValue(i.getQuantidade());
//            labNomeProduto.setText(produtoAtual.getProdutoNome());
//
//            listItem.remove(i);
//            atualizaTabela(listItem);
//        } else {
//
//        }
    }//GEN-LAST:event_tabProdutoMouseClicked

    private void tabParcelasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabParcelasMouseClicked

        linhaParcela = tabParcelas.getSelectedRow();

        if (linhaParcela != -1) {
            p = listPagamento.get(linhaParcela);

            jDateAlterarVencimento.setDate(p.getDataVencimento());

//        String valor = String.valueOf(p.getValorPagar());
//        String comVirgula = valor.replace('.', ',');
            txtValorParcela.setText(format(p.getValorPagar()));
        } else {

        }
    }//GEN-LAST:event_tabParcelasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EfetuarCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EfetuarCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EfetuarCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EfetuarCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EfetuarCompra dialog = new EfetuarCompra(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botAdicionar;
    private javax.swing.JButton botAlterarParcela;
    private javax.swing.JButton botBuscarFornecedor;
    private javax.swing.JButton botBuscarProduto;
    private javax.swing.JButton botCancelar;
    private javax.swing.JButton botExcluir;
    private javax.swing.JButton botFecharNormal2;
    private javax.swing.JButton botParcelar;
    private javax.swing.JButton botSalvar;
    private javax.swing.JButton botSalvarAlteracaoParcelas;
    private com.toedter.calendar.JDateChooser dataVencimento;
    private com.toedter.calendar.JDateChooser dataVencimentoProduto;
    private com.toedter.calendar.JDateChooser jDateAlterarVencimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private com.toedter.components.JSpinField jSpinQuantParcela;
    private com.toedter.components.JSpinField jSpinQuantProduto;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel labDataCompra;
    private javax.swing.JLabel labNomeFornecedor;
    private javax.swing.JLabel labNomeProduto;
    private javax.swing.JLabel labValorPagar;
    private javax.swing.JPanel painelFornecedor;
    private javax.swing.JPanel painelItemCompra;
    private javax.swing.JPanel painelParcelas;
    private rspanelgradiente.RSPanelGradiente rSPanelGradiente1;
    private rojerusan.RSTableMetro tabParcelas;
    private rojerusan.RSTableMetro tabProduto;
    private javax.swing.JTextField txtNumeroNotaFiscal;
    private javax.swing.JTextField txtValorCompra;
    private javax.swing.JTextField txtValorParcela;
    // End of variables declaration//GEN-END:variables

    private void calculaTotal() {
        double total = 0;
        for (ItemCompra itemcompra : listItem) {
            total = (total + itemcompra.getValor() * itemcompra.getQuantidade());
        }
        labValorPagar.setText(String.valueOf(format(total)));
    }

    private void atualizaTabela(ArrayList<ItemCompra> listItem) {

        modelo.setNumRows(0);
        for (ItemCompra i : listItem) {
            double x = i.getValor() * i.getQuantidade();
            String v = doubleString(x);
            modelo.addRow(new Object[]{i.getProdutoCod().getProdutoNome(), doubleString(i.getValor()), i.getQuantidade(), v});
        }
    }

    private void limparCampos() {

        produtoAtual = new Produto();
        jSpinQuantProduto.setValue(1);
        txtValorCompra.setText("");
        labNomeProduto.setText("");
        dataVencimentoProduto.setDate(null);

    }

    public String doubleString(double d) {
        Locale.setDefault(new Locale("pt", "BR"));
        DecimalFormat df = new DecimalFormat("#,##0.00", new DecimalFormatSymbols(new Locale("pt", "BR")));
        String s = df.format(d);
        return s;
    }

    public void darTamanhoAColuna() {
        tabProduto.getColumnModel().getColumn(0).setPreferredWidth(300);
        tabProduto.getColumnModel().getColumn(1).setPreferredWidth(100);
        tabProduto.getColumnModel().getColumn(2).setPreferredWidth(50);
        tabProduto.getColumnModel().getColumn(3).setPreferredWidth(10);
    }

    public void editarCampos() {
        txtNumeroNotaFiscal.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        txtValorCompra.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        txtValorParcela.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
    }

    private void atualizaTabelaParcela(ArrayList<Pagamento> listItem) {

        parcela.setNumRows(0);

        for (Pagamento i : listPagamento) {

            parcela.addRow(new Object[]{i.getNumeroParcela(), doubleString(i.getValorPagar()), formatar.format(i.getDataVencimento())});
        }
    }

    public static String format(double x) {
        return String.format("%.2f", x);
    }

    public void limpaCamposParcela() {
        dataVencimento.setDate(null);
        jSpinQuantParcela.setValue(1);
    }

    public void limpaCamposParcelaAlterar() {
        jDateAlterarVencimento.setDate(null);
        txtValorParcela.setText("");
        tabParcelas.setEnabled(true);
        jDateAlterarVencimento.setEnabled(false);
        txtValorParcela.setEditable(false);
    }

    public void editarConsulta() {
        tabParcelas.setEnabled(false);
        tabProduto.setEnabled(false);

        txtNumeroNotaFiscal.setEditable(false);
        txtNumeroNotaFiscal.setBackground(Color.white);

        txtValorCompra.setEditable(false);
        txtValorCompra.setBackground(Color.white);

        txtValorParcela.setEditable(false);
        txtValorParcela.setBackground(Color.white);

        jSpinQuantParcela.setEnabled(false);
        jSpinQuantProduto.setEnabled(false);
        jDateAlterarVencimento.setEnabled(false);
        dataVencimento.setEnabled(false);
        dataVencimentoProduto.setEnabled(false);
        botAdicionar.setVisible(false);
        botAlterarParcela.setVisible(false);
        botBuscarFornecedor.setVisible(false);
        botExcluir.setVisible(false);
        botSalvarAlteracaoParcelas.setVisible(false);
        botAdicionar.setVisible(false);
        botParcelar.setVisible(false);
        botBuscarProduto.setVisible(false);
    }

    private double calculaValorCompra() {
        total = 0;
        for (ItemCompra itemcompra : listItem) {
            total = (total + itemcompra.getValor() * itemcompra.getQuantidade());
        }
        return total;
    }

    private double calculaValorParcela() {
        total = 0;
        for (Pagamento pag : listPagamento) {
            total = (total + pag.getValorPagar());
        }
        return total;
    }

    private int compareTo(Date dataIni, Date dataFim) {
        int ini = Integer.parseInt(new SimpleDateFormat("yyyyMMdd").format(dataIni));
        int fim = Integer.parseInt(new SimpleDateFormat("yyyyMMdd").format(dataFim));
        return (ini == fim) ? 0 : (ini > fim) ? 1 : -1;
    }

}
