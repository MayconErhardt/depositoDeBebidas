/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Fundamental.Conta;

import controle.ControleCaixa;
import controle.ControlePagamento;
import controle.IntegridadeException;
import controle.NaoExisteException;
import java.awt.Color;
import java.awt.Font;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import modelo.Pagamento;

/**
 *
 * @author Maycon
 */
public class ContasList extends javax.swing.JDialog {

    /**
     * Creates new form ContasList
     */
    DefaultTableModel modelo;
    DefaultTableModel conta;
    private SimpleDateFormat formatar = new SimpleDateFormat("dd/MM/yyyy");
    ArrayList<Pagamento> listPag;
    ArrayList<Pagamento> listConta;
    ControlePagamento contPag;
    int i = 0;
    
    DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
    DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();

    public ContasList(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        tabContaCadastro.setFont(new Font("SansSerif", 0, 14));
        tabConta.setFont(new Font("SansSerif", 0, 14));

        direita.setBackground(new java.awt.Color(209, 209, 209));
        direita.setForeground(new java.awt.Color(102, 102, 102));
        esquerda.setBackground(new java.awt.Color(209, 209, 209));
        esquerda.setForeground(new java.awt.Color(102, 102, 102));
        Border emptyBorder = null;

        direita.setBorder(emptyBorder);
        tabConta.getColumnModel().getColumn(1).setCellRenderer(direita);
       // tabConta.getColumnModel().getColumn(2).setCellRenderer(direita);
        tabConta.getColumnModel().getColumn(0).setCellRenderer(esquerda);
        tabContaCadastro.getColumnModel().getColumn(1).setCellRenderer(direita);
       // tabContaCadastro.getColumnModel().getColumn(2).setCellRenderer(direita);
        tabContaCadastro.getColumnModel().getColumn(0).setCellRenderer(esquerda);
        

        modelo = (DefaultTableModel) tabConta.getModel();
        conta = (DefaultTableModel) tabContaCadastro.getModel();
        darTamanhoAColuna();
        contPag = new ControlePagamento();
        listPag = new ArrayList<>();
        txtNomeConta.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        txtNomeContaCadastrada.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        listPag.addAll(contPag.listarTodosAPagar());
        atualizaTabela(listPag);

        ControlePagamento contPagamento = new ControlePagamento();
        listConta = new ArrayList<>();
        listConta.addAll(contPagamento.listarTodosConta());
     //   System.out.println(listConta);
        atualizaTabelaCadastro(listConta);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSPanelGradiente1 = new rspanelgradiente.RSPanelGradiente();
        botFechar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabContaCadastro = new rojerusan.RSTableMetro();
        botLimpar1 = new javax.swing.JButton();
        txtNomeContaCadastrada = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        botVoltar1 = new javax.swing.JButton();
        botNovaConta1 = new javax.swing.JButton();
        botAlterar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabConta = new rojerusan.RSTableMetro();
        jLabel3 = new javax.swing.JLabel();
        txtNomeConta = new javax.swing.JTextField();
        botLimpar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        botVoltar = new javax.swing.JButton();
        botPagar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dataInicio = new com.toedter.calendar.JDateChooser();
        dataFim = new com.toedter.calendar.JDateChooser();
        botPesquisar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        boxContasABuscar = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        rSPanelGradiente1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        botFechar.setBackground(new java.awt.Color(255, 0, 0));
        botFechar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botFechar.setForeground(new java.awt.Color(255, 255, 255));
        botFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/fechar34px.png"))); // NOI18N
        botFechar.setContentAreaFilled(false);
        botFechar.setFocusable(false);
        botFechar.setOpaque(true);
        botFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botFecharActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CONTAS");

        javax.swing.GroupLayout rSPanelGradiente1Layout = new javax.swing.GroupLayout(rSPanelGradiente1);
        rSPanelGradiente1.setLayout(rSPanelGradiente1Layout);
        rSPanelGradiente1Layout.setHorizontalGroup(
            rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rSPanelGradiente1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        rSPanelGradiente1Layout.setVerticalGroup(
            rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
            .addGroup(rSPanelGradiente1Layout.createSequentialGroup()
                .addComponent(botFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N

        tabContaCadastro.setAutoCreateRowSorter(true);
        tabContaCadastro.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        tabContaCadastro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Conta", "Vencimento", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabContaCadastro.setAltoHead(40);
        tabContaCadastro.setAutoscrolls(false);
        tabContaCadastro.setColorBackgoundHead(new java.awt.Color(250, 250, 250));
        tabContaCadastro.setColorFilasBackgound1(new java.awt.Color(209, 209, 209));
        tabContaCadastro.setColorFilasBackgound2(new java.awt.Color(209, 209, 209));
        tabContaCadastro.setColorFilasForeground1(new java.awt.Color(102, 102, 102));
        tabContaCadastro.setColorFilasForeground2(new java.awt.Color(102, 102, 102));
        tabContaCadastro.setColorForegroundHead(new java.awt.Color(51, 51, 51));
        tabContaCadastro.setColorSelBackgound(new java.awt.Color(40, 53, 147));
        tabContaCadastro.setFuenteFilas(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tabContaCadastro.setFuenteFilasSelect(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tabContaCadastro.setFuenteHead(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tabContaCadastro.setGridColor(new java.awt.Color(204, 204, 204));
        tabContaCadastro.setGrosorBordeFilas(0);
        tabContaCadastro.setGrosorBordeHead(0);
        tabContaCadastro.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tabContaCadastro.setMultipleSeleccion(false);
        tabContaCadastro.setOpaque(false);
        tabContaCadastro.setRowHeight(30);
        tabContaCadastro.setSelectionBackground(new java.awt.Color(40, 53, 147));
        tabContaCadastro.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabContaCadastro);
        if (tabContaCadastro.getColumnModel().getColumnCount() > 0) {
            tabContaCadastro.getColumnModel().getColumn(0).setResizable(false);
            tabContaCadastro.getColumnModel().getColumn(1).setResizable(false);
            tabContaCadastro.getColumnModel().getColumn(2).setResizable(false);
        }

        botLimpar1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botLimpar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/limpar18px.png"))); // NOI18N
        botLimpar1.setText("LIMPAR");
        botLimpar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botLimpar1ActionPerformed(evt);
            }
        });

        txtNomeContaCadastrada.setBackground(new java.awt.Color(240, 240, 240));
        txtNomeContaCadastrada.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txtNomeContaCadastrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeContaCadastradaActionPerformed(evt);
            }
        });
        txtNomeContaCadastrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeContaCadastradaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeContaCadastradaKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel6.setText("Tipo Conta:");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        botVoltar1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botVoltar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/voltar18px.png"))); // NOI18N
        botVoltar1.setText("VOLTAR");
        botVoltar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botVoltar1ActionPerformed(evt);
            }
        });
        jPanel3.add(botVoltar1);

        botNovaConta1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botNovaConta1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/novo18px.png"))); // NOI18N
        botNovaConta1.setText("NOVA CONTA");
        botNovaConta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botNovaConta1ActionPerformed(evt);
            }
        });
        jPanel3.add(botNovaConta1);

        botAlterar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/edit18px.png"))); // NOI18N
        botAlterar.setText("ALTERAR");
        botAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botAlterarActionPerformed(evt);
            }
        });
        jPanel3.add(botAlterar);

        jButton1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/delete18px.png"))); // NOI18N
        jButton1.setText("EXCLUIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 851, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(2, 2, 2)
                .addComponent(txtNomeContaCadastrada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botLimpar1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtNomeContaCadastrada, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botLimpar1)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Registrar Contas", jPanel4);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabConta.setAutoCreateRowSorter(true);
        tabConta.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        tabConta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Conta", "Vencimento", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabConta.setAltoHead(40);
        tabConta.setAutoscrolls(false);
        tabConta.setColorBackgoundHead(new java.awt.Color(250, 250, 250));
        tabConta.setColorFilasBackgound1(new java.awt.Color(209, 209, 209));
        tabConta.setColorFilasBackgound2(new java.awt.Color(209, 209, 209));
        tabConta.setColorFilasForeground1(new java.awt.Color(102, 102, 102));
        tabConta.setColorFilasForeground2(new java.awt.Color(102, 102, 102));
        tabConta.setColorForegroundHead(new java.awt.Color(51, 51, 51));
        tabConta.setColorSelBackgound(new java.awt.Color(40, 53, 147));
        tabConta.setFuenteFilas(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tabConta.setFuenteFilasSelect(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tabConta.setFuenteHead(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tabConta.setGridColor(new java.awt.Color(204, 204, 204));
        tabConta.setGrosorBordeFilas(0);
        tabConta.setGrosorBordeHead(0);
        tabConta.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tabConta.setMultipleSeleccion(false);
        tabConta.setOpaque(false);
        tabConta.setRowHeight(30);
        tabConta.setSelectionBackground(new java.awt.Color(40, 53, 147));
        tabConta.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabConta);
        if (tabConta.getColumnModel().getColumnCount() > 0) {
            tabConta.getColumnModel().getColumn(0).setResizable(false);
            tabConta.getColumnModel().getColumn(1).setResizable(false);
            tabConta.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setText("Tipo Conta:");

        txtNomeConta.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        txtNomeConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeContaActionPerformed(evt);
            }
        });
        txtNomeConta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeContaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeContaKeyTyped(evt);
            }
        });

        botLimpar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/limpar18px.png"))); // NOI18N
        botLimpar.setText("LIMPAR");
        botLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botLimparActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        botVoltar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/voltar18px.png"))); // NOI18N
        botVoltar.setText("VOLTAR");
        botVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botVoltarActionPerformed(evt);
            }
        });
        jPanel2.add(botVoltar);

        botPagar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/pagar18px.png"))); // NOI18N
        botPagar.setText("PAGAR");
        botPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botPagarActionPerformed(evt);
            }
        });
        jPanel2.add(botPagar);

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setText("Data Início:");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setText("Data Fim:");

        dataInicio.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N

        dataFim.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N

        botPesquisar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/buscar18px.png"))); // NOI18N
        botPesquisar.setText("PESQUISAR");
        botPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botPesquisarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("BUSCAR POR CONTAS:");

        boxContasABuscar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        boxContasABuscar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "À PAGAR", "PAGAS" }));
        boxContasABuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boxContasABuscarMouseClicked(evt);
            }
        });
        boxContasABuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxContasABuscarActionPerformed(evt);
            }
        });
        boxContasABuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boxContasABuscarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boxContasABuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(2, 2, 2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtNomeConta, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(boxContasABuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtNomeConta, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botLimpar)
                    .addComponent(jLabel3))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(dataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(dataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Pagamentos", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanelGradiente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(rSPanelGradiente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botFecharActionPerformed

        dispose();

    }//GEN-LAST:event_botFecharActionPerformed

    private void boxContasABuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxContasABuscarKeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_boxContasABuscarKeyPressed

    private void boxContasABuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxContasABuscarActionPerformed
        if (boxContasABuscar.getSelectedItem().equals("À PAGAR")) {
            listPag.clear();
            listPag = new ArrayList<>();
            listPag.addAll(contPag.listarTodosAPagar());
            atualizaTabela(listPag);
            botPagar.setText("PAGAR");
            botPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/pagar18px.png")));
        } else {
            listPag.clear();
            listPag = new ArrayList<>();
            listPag.addAll(contPag.listarTodasPagas());
            atualizaTabela(listPag);
            botPagar.setText("CONTAS PAGAS");
            botPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/contaPaga18px.png")));
        }
    }//GEN-LAST:event_boxContasABuscarActionPerformed

    private void boxContasABuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boxContasABuscarMouseClicked

        // TODO add your handling code here:
    }//GEN-LAST:event_boxContasABuscarMouseClicked

    private void botPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botPesquisarActionPerformed

        i = 1;
        listPag.clear();
        if (boxContasABuscar.getSelectedItem().equals("À PAGAR")) {
            if (dataInicio.getDate() != null || dataFim.getDate() != null) {
                listPag.addAll(contPag.buscarPorPeriodo(dataInicio.getDate(), dataFim.getDate()));
                atualizaTabela(listPag);
            } else {
                JOptionPane.showMessageDialog(null, "SELECIONE AS INICIO E FIM PARA PODER\n BUSCAR"
                        + "POR UM DETERMINADO PERIODO!");
            }
        } else {
            if (dataInicio.getDate() != null || dataFim.getDate() != null) {
                listPag.addAll(contPag.buscarPorPeriodoPagas(dataInicio.getDate(), dataFim.getDate()));
                atualizaTabela(listPag);
            } else {
                JOptionPane.showMessageDialog(null, "SELECIONE AS INICIO E FIM PARA PODER\n BUSCAR"
                        + "POR UM DETERMINADO PERIODO!");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_botPesquisarActionPerformed

    private void botPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botPagarActionPerformed

        int i = -1;
        i = tabConta.getSelectedRow();
        if (i != -1) {

            if (boxContasABuscar.getSelectedItem().equals("À PAGAR")) {
                if (ControleCaixa.isCaixaAberto() != null) {
                    Pagamento pag = new Pagamento();
                    pag = listPag.get(i);
                    PagarConta pagConta = new PagarConta(null, true, pag);
                    pagConta.setVisible(true);
                    listPag.clear();
                    listPag = new ArrayList<>();
                    listPag.addAll(contPag.listarTodosAPagar());
                    atualizaTabela(listPag);
                    listConta.clear();
                    ControlePagamento c = new ControlePagamento();
                    listConta.addAll(c.listarTodosConta());
                    atualizaTabelaCadastro(listConta);
                    
                } else {
                    JOptionPane.showMessageDialog(null, "POR FAVOR ABRA UM CAIXA PARA REALIZAR O PAGAMENTO DA CONTA!");
                }

            } else {
                Pagamento pag = new Pagamento();
                pag = listPag.get(i);
                MostrarContaPaga pagConta = new MostrarContaPaga(null, true, pag);
                pagConta.setVisible(true);
                pag = new Pagamento();
            }

        } else {
            JOptionPane.showMessageDialog(null, "SELECIONE UMA CONTA NA TABELA!");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_botPagarActionPerformed

    private void botVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botVoltarActionPerformed

        dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_botVoltarActionPerformed

    private void botLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botLimparActionPerformed
        i = 0;
        txtNomeConta.setText("");
        dataInicio.setDate(null);
        dataFim.setDate(null);
        if (boxContasABuscar.getSelectedItem().equals("À PAGAR")) {
            boxContasABuscar.setSelectedIndex(0);

        } else {
            boxContasABuscar.setSelectedIndex(1);
        }
    }//GEN-LAST:event_botLimparActionPerformed

    private void txtNomeContaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeContaKeyTyped

        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeContaKeyTyped

    private void txtNomeContaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeContaKeyReleased

        //JOptionPane.showMessageDialog(null, i);
        listPag.clear();

        if (!(txtNomeConta.getText().equals("")) && i == 0) {
            if (boxContasABuscar.getSelectedItem().equals("PAGAS")) {
                listPag.addAll(contPag.buscarNomePagas(txtNomeConta.getText()));
                atualizaTabela(listPag);
            } else {
                listPag.addAll(contPag.buscarNome(txtNomeConta.getText()));
                atualizaTabela(listPag);
            }
        } else if (i == 1) {
            if (boxContasABuscar.getSelectedItem().equals("PAGAS")) {
                listPag.addAll(contPag.porPeriodoEContaPagas(dataInicio.getDate(), dataFim.getDate(), txtNomeConta.getText()));
                atualizaTabela(listPag);
            } else {
                listPag.addAll(contPag.porPeriodoEConta(dataInicio.getDate(), dataFim.getDate(), txtNomeConta.getText()));
                atualizaTabela(listPag);
            }
        } else {

            if (boxContasABuscar.getSelectedItem().equals("PAGAS")) {
                listPag.addAll(contPag.listarTodasPagas());
                atualizaTabela(listPag);
            } else {

                listPag.addAll(contPag.listarTodosAPagar());
                atualizaTabela(listPag);
            }
        }
    }//GEN-LAST:event_txtNomeContaKeyReleased

    private void txtNomeContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeContaActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeContaActionPerformed

    private void botLimpar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botLimpar1ActionPerformed
        
        txtNomeContaCadastrada.setText("");
        listConta.clear();
        ControlePagamento cp = new ControlePagamento();
        listConta.addAll(cp.listarTodosConta());
        atualizaTabelaCadastro(listConta);


        // TODO add your handling code here:
    }//GEN-LAST:event_botLimpar1ActionPerformed

    private void txtNomeContaCadastradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeContaCadastradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeContaCadastradaActionPerformed

    private void txtNomeContaCadastradaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeContaCadastradaKeyReleased

        ControlePagamento contPaga = new ControlePagamento();
        
        listConta.clear();

        listConta.addAll(contPaga.buscarContaPorNome(txtNomeContaCadastrada.getText()));
        atualizaTabelaCadastro(listConta);

        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeContaCadastradaKeyReleased

    private void txtNomeContaCadastradaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeContaCadastradaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeContaCadastradaKeyTyped

    private void botVoltar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botVoltar1ActionPerformed
        dispose();


        // TODO add your handling code here:
    }//GEN-LAST:event_botVoltar1ActionPerformed

    private void botNovaConta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botNovaConta1ActionPerformed

        NovaConta novaCont = new NovaConta(null, true, null);
        novaCont.setVisible(true);

        listPag.clear();
        listPag = new ArrayList<>();

        boxContasABuscar.setSelectedIndex(0);
        listConta.clear();
        ControlePagamento cp = new ControlePagamento();
        listConta.addAll(cp.listarTodosConta());
        atualizaTabelaCadastro(listConta);

        // TODO add your handling code here:
    }//GEN-LAST:event_botNovaConta1ActionPerformed

    private void botAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botAlterarActionPerformed

        int listaContaAlterar = -1;
        listaContaAlterar = tabContaCadastro.getSelectedRow();
        if (listaContaAlterar != -1) {

            Pagamento cont = new Pagamento();
            cont = listConta.get(listaContaAlterar);
            NovaConta nc = new NovaConta(null, true, cont);
            nc.setVisible(true);
            ControlePagamento contPagamento = new ControlePagamento();
            listConta.clear();
            listConta.addAll(contPagamento.listarTodosConta());
            atualizaTabelaCadastro(listConta);
            listPag.clear();
            ControlePagamento listaTudoPagar = new ControlePagamento();
            listPag.addAll(listaTudoPagar.listarTodosAPagar());
            atualizaTabela(listPag);
        } else {
            JOptionPane.showMessageDialog(null, "SELECIONE UMA CONTA PARA ALTERAR!");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_botAlterarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int linhaExcluir = -1;
        linhaExcluir = tabContaCadastro.getSelectedRow();
        if (linhaExcluir != -1) {
            Pagamento pagam = new Pagamento();
            pagam = listConta.get(linhaExcluir);
            int op = JOptionPane.showConfirmDialog(this,
                    "Confirma a exclusão da Conta de "
                    + pagam.getDescricao() + "?",
                    "Exclusão de Conta",
                    JOptionPane.YES_NO_OPTION);

            if (op == JOptionPane.YES_OPTION) {

                ControlePagamento contPaga = new ControlePagamento();
                contPaga.excluir(pagam);
                contPaga = new ControlePagamento();
                listConta.clear();
                listConta.addAll(contPaga.listarTodosConta());
                atualizaTabelaCadastro(listConta);
                listPag.clear();
                listPag.addAll(contPaga.listarTodosAPagar());
                atualizaTabela(listPag);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione um Cliente Na Tabela Para Ser Excluido");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContasList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContasList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContasList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContasList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ContasList dialog = new ContasList(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botAlterar;
    private javax.swing.JButton botFechar;
    private javax.swing.JButton botLimpar;
    private javax.swing.JButton botLimpar1;
    private javax.swing.JButton botNovaConta1;
    private javax.swing.JButton botPagar;
    private javax.swing.JButton botPesquisar;
    private javax.swing.JButton botVoltar;
    private javax.swing.JButton botVoltar1;
    private javax.swing.JComboBox<String> boxContasABuscar;
    private com.toedter.calendar.JDateChooser dataFim;
    private com.toedter.calendar.JDateChooser dataInicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private rspanelgradiente.RSPanelGradiente rSPanelGradiente1;
    private rojerusan.RSTableMetro tabConta;
    private rojerusan.RSTableMetro tabContaCadastro;
    private javax.swing.JTextField txtNomeConta;
    private javax.swing.JTextField txtNomeContaCadastrada;
    // End of variables declaration//GEN-END:variables

    private void darTamanhoAColuna() {
        tabConta.getColumnModel().getColumn(0).setPreferredWidth(330);
        tabConta.getColumnModel().getColumn(1).setPreferredWidth(50);
        tabConta.getColumnModel().getColumn(2).setPreferredWidth(40);

    }

    public String doubleString(double d) {

        Locale.setDefault(new Locale("pt", "BR"));
        DecimalFormat df = new DecimalFormat("#,##0.00", new DecimalFormatSymbols(new Locale("pt", "BR")));
        String s = df.format(d);
        return s;
    }

    private void atualizaTabela(ArrayList<Pagamento> listPag) {

        modelo.setNumRows(0);

        while (modelo.getRowCount() > 0) {
            // apaga a primeira linha
            modelo.removeRow(0);
        }
        if (!(listPag.isEmpty())) {
            //  System.out.println(listPag);
            for (Pagamento p : listPag) {
                modelo.addRow(new Object[]{p.getDescricao(), formatar.format(p.getDataVencimento()), doubleString(p.getValorPagar())});
            }
        }
    }

    private void atualizaTabelaCadastro(ArrayList<Pagamento> listCon) {

        conta.setNumRows(0);

        while (conta.getRowCount() > 0) {
            // apaga a primeira linha
            conta.removeRow(0);
        }
        if (!(listCon.isEmpty())) {
            //  System.out.println(listPag);
            for (Pagamento p : listCon) {
                conta.addRow(new Object[]{p.getDescricao(), formatar.format(p.getDataVencimento()), doubleString(p.getValorPagar())});
            }
        }
    }

}
