/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Fundamental.RealizarVenda;

import controle.ControleCaixa;
import controle.ControleRecebimento;
import controle.ControleVenda;

import java.awt.Color;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Caixa;
import modelo.ItemVenda;

import modelo.Recebimento;
import modelo.Venda;

/**
 *
 * @author Maycon
 */
public class Receber extends javax.swing.JDialog {

    /**
     * Creates new form Receber
     */
    SimpleDateFormat formatarData = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat formatarHora = new SimpleDateFormat("HH:mm:ss");

    boolean status = true;

    private double valorJaRecebido = 0;

    Date hoje;

    Venda vendaRec;

    Venda vendaRapida;
    private DefaultTableModel itemVenda;

    double valorRapido = 0;
    private ArrayList<ItemVenda> lisConsumo = new ArrayList<>();
    private ArrayList<Recebimento> listaRecebimento = new ArrayList<Recebimento>();

    public Receber(java.awt.Frame parent, boolean modal, Venda venda) {
        super(parent, modal);
        initComponents();
        hoje = new Date();

        itemVenda = (DefaultTableModel) tabConsumo.getModel();
        darTamanhoAColuna();
        labDataRecebimento.setText(formatarData.format(hoje));
        labHoraRecebimento.setText(formatarHora.format(hoje));
        labValorTotalConta.setText(doubleString(venda.getVendaTotal()));
        // labValorAReceber.setText(doubleString(venda.getVendaTotal()));
        formaValor.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));

        if (venda.getStatus() == 'A' || venda.getStatus() == 'P') {
            lisConsumo.clear();
            lisConsumo.addAll(venda.getListaVenda());
            if (lisConsumo.isEmpty()) {
            } else {

                atualizaTabela(lisConsumo);
            }
            ControleRecebimento contRecebimentoRecebido;
            contRecebimentoRecebido = new ControleRecebimento();
            vendaRec = venda;
            status = true;
            if (!venda.getListaRecebimento().isEmpty()) {
                valorJaRecebido = vendaRec.getTotalRecebido();
                labValorAReceber.setText(doubleString(vendaRec.getVendaTotal() - valorJaRecebido));

            } else {

            }
            for (Recebimento r : vendaRec.getListaRecebimento()) {
                jTextAreaObservação.setText("");
                jTextAreaObservação.setText(r.getOberservacao());
            }
            labTotalRecebido.setText(doubleString(valorJaRecebido));

        } else {
            vendaRapida = venda;

            lisConsumo.clear();
            lisConsumo.addAll(venda.getListaVenda());
            atualizaTabela(lisConsumo);

            if (!(vendaRapida.getListaRecebimento() == null)) {
                valorJaRecebido = vendaRapida.getTotalRecebido();
                labTotalRecebido.setText(doubleString(valorJaRecebido));
            } else {

            }
            botCancelar.setVisible(true);
            status = false;
            //vendaRec = venda;

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        rSPanelGradiente1 = new rspanelgradiente.RSPanelGradiente();
        jLabel1 = new javax.swing.JLabel();
        botFecharNormal = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        boxFormaPag = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaObservação = new javax.swing.JTextArea();
        botCancelar = new javax.swing.JButton();
        botReceber = new javax.swing.JButton();
        labDataRecebimento = new javax.swing.JLabel();
        labHoraRecebimento = new javax.swing.JLabel();
        labValorAReceber = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        labTotalRecebido = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        labValorTotalConta = new javax.swing.JLabel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabConsumo = new rojerusan.RSTableMetro();
        formaValor = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("RECEBER");

        botFecharNormal.setBackground(new java.awt.Color(255, 0, 0));
        botFecharNormal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/fechar34px.png"))); // NOI18N
        botFecharNormal.setContentAreaFilled(false);
        botFecharNormal.setFocusable(false);
        botFecharNormal.setOpaque(true);
        botFecharNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botFecharNormalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rSPanelGradiente1Layout = new javax.swing.GroupLayout(rSPanelGradiente1);
        rSPanelGradiente1.setLayout(rSPanelGradiente1Layout);
        rSPanelGradiente1Layout.setHorizontalGroup(
            rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelGradiente1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botFecharNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        rSPanelGradiente1Layout.setVerticalGroup(
            rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(rSPanelGradiente1Layout.createSequentialGroup()
                .addComponent(botFecharNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("DATA RECEBIMENTO:");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setText("HORA RECEBIMENTO:");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setText("VALOR TOTAL:");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setText("VALOR RECEBIDO:");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel6.setText("FORMA RECEBIMENTO:");

        boxFormaPag.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        boxFormaPag.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DINHEIRO", "CARTÃO" }));
        boxFormaPag.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boxFormaPagKeyPressed(evt);
            }
        });

        jTextAreaObservação.setColumns(20);
        jTextAreaObservação.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jTextAreaObservação.setRows(5);
        jTextAreaObservação.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Observação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 14))); // NOI18N
        jScrollPane1.setViewportView(jTextAreaObservação);

        botCancelar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/cancel18px.png"))); // NOI18N
        botCancelar.setText("CANCELAR");
        botCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botCancelarActionPerformed(evt);
            }
        });

        botReceber.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botReceber.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/receber18px.png"))); // NOI18N
        botReceber.setText("RECEBER");
        botReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botReceberActionPerformed(evt);
            }
        });

        labDataRecebimento.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N

        labHoraRecebimento.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N

        labValorAReceber.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        labValorAReceber.setForeground(new java.awt.Color(204, 0, 0));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel7.setText("TOTAL RECEBIDO:");

        labTotalRecebido.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel9.setText("VALOR À RECEBER:");

        labValorTotalConta.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N

        kGradientPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Consumo"));
        kGradientPanel1.setkEndColor(new java.awt.Color(255, 255, 255));
        kGradientPanel1.setkStartColor(new java.awt.Color(255, 255, 255));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        tabConsumo.setBackground(new java.awt.Color(0, 0, 0));
        tabConsumo.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0)));
        tabConsumo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "PRODUTO", "QUANTIDADE", "VALOR", "TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabConsumo.setAutoscrolls(false);
        tabConsumo.setColorBackgoundHead(new java.awt.Color(255, 255, 255));
        tabConsumo.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        tabConsumo.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabConsumo.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tabConsumo.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabConsumo.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabConsumo.setColorForegroundHead(new java.awt.Color(0, 0, 0));
        tabConsumo.setColorSelBackgound(new java.awt.Color(255, 255, 255));
        tabConsumo.setColorSelForeground(new java.awt.Color(0, 0, 0));
        tabConsumo.setFocusable(false);
        tabConsumo.setFuenteFilas(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        tabConsumo.setFuenteFilasSelect(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        tabConsumo.setFuenteHead(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tabConsumo.setGridColor(new java.awt.Color(255, 255, 255));
        tabConsumo.setSelectionBackground(new java.awt.Color(255, 255, 255));
        tabConsumo.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tabConsumo);
        if (tabConsumo.getColumnModel().getColumnCount() > 0) {
            tabConsumo.getColumnModel().getColumn(0).setResizable(false);
            tabConsumo.getColumnModel().getColumn(1).setResizable(false);
            tabConsumo.getColumnModel().getColumn(2).setResizable(false);
            tabConsumo.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 472, Short.MAX_VALUE)
            .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(kGradientPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)))
        );

        formaValor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        formaValor.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        formaValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formaValorKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanelGradiente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(botCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botReceber, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel7)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(labValorTotalConta, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(formaValor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(labTotalRecebido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(labDataRecebimento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(labValorAReceber, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(labHoraRecebimento, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(boxFormaPag, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)))
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(rSPanelGradiente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel2)
                            .addComponent(labDataRecebimento, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(labHoraRecebimento, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel3)
                            .addComponent(labValorTotalConta, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(labValorAReceber, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel7)
                            .addComponent(labTotalRecebido, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel6)
                            .addComponent(boxFormaPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(formaValor, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botReceber)
                            .addComponent(botCancelar)))
                    .addComponent(kGradientPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botFecharNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botFecharNormalActionPerformed

        dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_botFecharNormalActionPerformed

    private void botReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botReceberActionPerformed
        double verificaValorDigitado = ((Number) formaValor.getValue()).doubleValue();
        if (verificaValorDigitado > 0) {
            if (status) {
                double valorRecebido = 0;
                valorRecebido = ((Number) formaValor.getValue()).doubleValue();
                double valorTotalRecebido = valorRecebido + vendaRec.getTotalRecebido();
                if (valorTotalRecebido >= vendaRec.getVendaTotal()) {
                    if ((valorTotalRecebido - vendaRec.getVendaTotal()) == 0) {
                        Recebimento rec = new Recebimento();
                        rec.setValorRecebido(valorRecebido);
                        rec.setDataRecebimento(hoje);
                        rec.setHoraRecebimento(hoje);
                        rec.setVendaCod(vendaRec);
                        rec.setCaixaCod(ControleCaixa.getCaixa());
                        if (jTextAreaObservação.getText().trim().equals("")) {
                            rec.setOberservacao(jTextAreaObservação.getText());
                        } else {
                            rec.setOberservacao(jTextAreaObservação.getText());
                        }
                        ControleCaixa.getCaixa().getListCaixa().add(rec);
                        if (boxFormaPag.getSelectedIndex() == 0) {
                            rec.setFormaRecebimento('D');
                        } else {
                            rec.setFormaRecebimento('C');
                        }
                        if (null == vendaRec.getListaRecebimento()) {
                            listaRecebimento.add(rec);
                            vendaRec.setListaRecebimento(listaRecebimento);
                        } else {
                            vendaRec.getListaRecebimento().add(rec);
                        }
                        valorJaRecebido = vendaRec.getTotalRecebido();

                        ControleVenda contV = new ControleVenda();

                        ControleCaixa.getCaixa().getListCaixa().add(rec);

                        vendaRec.setStatus('F');
                        contV.salvarAlteracao(vendaRec);

                        dispose();
                    } else {
                        if (valorTotalRecebido > vendaRec.getVendaTotal()) {
                            //                     System.out.println("suashaushaus");
                            double valorDoTroco = valorTotalRecebido - vendaRec.getVendaTotal();
                            double valorTirar = valorRecebido - valorDoTroco;
                            Recebimento rec = new Recebimento();
                            rec.setValorRecebido(valorTirar);
                            rec.setDataRecebimento(hoje);
                            rec.setHoraRecebimento(hoje);
                            rec.setVendaCod(vendaRec);
                            rec.setCaixaCod(ControleCaixa.getCaixa());
                            if (jTextAreaObservação.getText().trim().equals("")) {
                                rec.setOberservacao(jTextAreaObservação.getText());
                            } else {
                                rec.setOberservacao(jTextAreaObservação.getText());
                            }
                            ControleCaixa.getCaixa().getListCaixa().add(rec);
                            if (boxFormaPag.getSelectedIndex() == 0) {
                                rec.setFormaRecebimento('D');
                            } else {
                                rec.setFormaRecebimento('C');
                            }
                            if (null == vendaRec.getListaRecebimento()) {
                                listaRecebimento.add(rec);
                                vendaRec.setListaRecebimento(listaRecebimento);
                            } else {
                                vendaRec.setListaRecebimento(listaRecebimento);
                            }
                            //

                            ControleVenda contV = new ControleVenda();

                            if (valorDoTroco > 0) {

                                double x = valorJaRecebido - vendaRec.getVendaTotal();
                                Troco troco = new Troco(null, true, valorDoTroco);
                                troco.setVisible(true);
                                vendaRec.setStatus('F');
                                //ControleCaixa.getCaixa().getListCaixa().add(rec);
                                contV.salvarAlteracao(vendaRec);
                                dispose();
                            } else {
                                contV.salvarAlteracao(vendaRec);
                            }
                        }
                    }

                } else {
                    Recebimento rec = new Recebimento();
                    rec.setValorRecebido(valorRecebido);
                    rec.setDataRecebimento(hoje);
                    rec.setHoraRecebimento(hoje);
                    rec.setVendaCod(vendaRec);
                    rec.setCaixaCod(ControleCaixa.getCaixa());
                    if (jTextAreaObservação.getText().trim().equals("")) {
                        rec.setOberservacao(jTextAreaObservação.getText());
                    } else {
                        rec.setOberservacao(jTextAreaObservação.getText());
                    }
                    ControleCaixa.getCaixa().getListCaixa().add(rec);
                    if (boxFormaPag.getSelectedIndex() == 0) {
                        rec.setFormaRecebimento('D');
                    } else {
                        rec.setFormaRecebimento('C');
                    }
                    if (null == vendaRec.getListaRecebimento()) {
                        listaRecebimento.add(rec);
                        vendaRec.setListaRecebimento(listaRecebimento);
                    } else {
                        vendaRec.getListaRecebimento().add(rec);

                    }
                    valorJaRecebido = vendaRec.getTotalRecebido();

                    ControleVenda contV = new ControleVenda();

                    contV.salvarAlteracao(vendaRec);

                }
                labTotalRecebido.setText(doubleString(valorTotalRecebido));
                formaValor.setValue(0);
                labValorAReceber.setText(doubleString(vendaRec.getVendaTotal() - valorTotalRecebido));
            } else {

                double valorRecebido = 0;

                valorRecebido = ((Number) formaValor.getValue()).doubleValue();
                //double valorTotalRecebido = valorRecebido + vendaRapida.getTotalRecebido();
                //if (valorTotalRecebido >= vendaRapida.getVendaTotal()) {
                if ((valorRecebido - vendaRapida.getVendaTotal()) == 0) {
                    Recebimento rec = new Recebimento();
                    rec.setValorRecebido(valorRecebido);
                    rec.setDataRecebimento(hoje);
                    rec.setHoraRecebimento(hoje);
                    rec.setVendaCod(vendaRapida);
                    rec.setCaixaCod(ControleCaixa.getCaixa());
                    //rec.setCaixaCod();
                    ControleCaixa.getCaixa().getListCaixa().add(rec);
                    if (boxFormaPag.getSelectedIndex() == 0) {
                        rec.setFormaRecebimento('D');
                    } else {
                        rec.setFormaRecebimento('C');
                    }
                    if (null == vendaRapida.getListaRecebimento()) {
                        listaRecebimento.add(rec);
                        vendaRapida.setListaRecebimento(listaRecebimento);
                    } else {
                        vendaRapida.getListaRecebimento().add(rec);
                    }
                    //  valorJaRecebido = vendaRec.getTotalRecebido();

                    ControleVenda contV = new ControleVenda();

                    vendaRapida.setStatus('F');
                    contV.gravarNovo(vendaRapida);
                    dispose();
                    // }
                } else {
                    //             System.out.println("shaushasuahsuah");
                    Recebimento rec = new Recebimento();
                    rec.setValorRecebido(valorRecebido);
                    rec.setDataRecebimento(hoje);
                    rec.setHoraRecebimento(hoje);
                    rec.setVendaCod(vendaRapida);
                    rec.setCaixaCod(ControleCaixa.getCaixa());
                    ControleCaixa.getCaixa().getListCaixa().add(rec);
                    if (boxFormaPag.getSelectedIndex() == 0) {
                        rec.setFormaRecebimento('D');
                    } else {
                        rec.setFormaRecebimento('C');
                    }
                    if (null == vendaRapida.getListaRecebimento()) {
                        listaRecebimento.add(rec);
                        vendaRapida.setListaRecebimento(listaRecebimento);
                    } else {
                        if (valorRecebido + vendaRapida.getTotalRecebido() > vendaRapida.getTotalVenda()) {

                            double x = (valorRecebido + vendaRapida.getTotalRecebido()) - vendaRapida.getTotalVenda();
                            x = valorRecebido - x;
                            rec.setValorRecebido(x);
                            vendaRapida.getListaRecebimento().add(rec);
                        } else {
                            vendaRapida.getListaRecebimento().add(rec);
                        }
                    }
                    //  valorJaRecebido = vendaRec.getTotalRecebido();

                    ControleVenda contV = new ControleVenda();
                    valorRapido += valorRecebido;
                    // System.out.println(valorRapido);
                    vendaRapida.setStatus('F');

                    if (valorRapido >= vendaRapida.getVendaTotal()) {
                        // System.out.println("entrei ");
                        Troco t = new Troco(null, true, (valorRapido - vendaRapida.getVendaTotal()));
                        t.setVisible(true);
                        dispose();
                    } else {

                    }

                    labTotalRecebido.setText(doubleString(valorRapido));
                    labValorAReceber.setText(doubleString(vendaRapida.getVendaTotal() - valorRapido));
                    formaValor.setValue(0);

                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "ENTRE COM UM VALOR DE RECEBIMENTO!");
        }

    }//GEN-LAST:event_botReceberActionPerformed

    private void botCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botCancelarActionPerformed

        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_botCancelarActionPerformed

    private void formaValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formaValorKeyPressed

        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (formaValor.getText().isEmpty()) {
                formaValor.setValue(0);
            }
            boxFormaPag.requestFocus();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_formaValorKeyPressed

    private void boxFormaPagKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxFormaPagKeyPressed

        if (evt.getKeyCode() == evt.VK_ENTER) {

            botReceber.requestFocus();
        }


    }//GEN-LAST:event_boxFormaPagKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Receber.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Receber.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Receber.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Receber.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Receber dialog = new Receber(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botCancelar;
    private javax.swing.JButton botFecharNormal;
    private javax.swing.JButton botReceber;
    private javax.swing.JComboBox<String> boxFormaPag;
    private javax.swing.JFormattedTextField formaValor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaObservação;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel labDataRecebimento;
    private javax.swing.JLabel labHoraRecebimento;
    private javax.swing.JLabel labTotalRecebido;
    private javax.swing.JLabel labValorAReceber;
    private javax.swing.JLabel labValorTotalConta;
    private rspanelgradiente.RSPanelGradiente rSPanelGradiente1;
    private rojerusan.RSTableMetro tabConsumo;
    // End of variables declaration//GEN-END:variables

    public String doubleString(double d) {
        Locale.setDefault(new Locale("pt", "BR"));
        DecimalFormat df = new DecimalFormat("#,##0.00", new DecimalFormatSymbols(new Locale("pt", "BR")));
        String s = df.format(d);
        return s;
    }

    private void atualizaTabela(ArrayList<ItemVenda> listProduto) {

        itemVenda.setNumRows(0);
        for (ItemVenda i : listProduto) {
            double x = i.getValor() * i.getQuantidade();
            String v = doubleString(x);
            itemVenda.addRow(new Object[]{i.getProdutoCod().getProdutoNome(), i.getQuantidade(), doubleString(i.getValor()), doubleString(i.getValor() * i.getQuantidade())});
        }
    }

    public void darTamanhoAColuna() {
        tabConsumo.getColumnModel().getColumn(0).setPreferredWidth(100);
        tabConsumo.getColumnModel().getColumn(1).setPreferredWidth(70);
        tabConsumo.getColumnModel().getColumn(2).setPreferredWidth(90);
        tabConsumo.getColumnModel().getColumn(3).setPreferredWidth(40);

    }

//    if (status) {
//            double valor = ((Number) formaValor.getValue()).doubleValue();
//
//            if (valor > 0) {
//                try {
//                    Recebimento rec = new Recebimento();
//                    formaValor.setValue(valor);
//                    rec.setValorRecebido(valor);
//                    rec.setDataRecebimento(hoje);
//                    rec.setHoraRecebimento(hoje);
//                    rec.setVendaCod(vendaRec);
//                    rec.setCaixaCod(ControleCaixa.getCaixa());
//                    if (boxFormaPag.getSelectedIndex() == 0) {
//                        rec.setFormaRecebimento('D');
//                    } else {
//                        rec.setFormaRecebimento('C');
//                    }
//                    if (null == vendaRec.getListaRecebimento()) {
//                        listaRecebimento.add(rec);
//                        vendaRec.setListaRecebimento(listaRecebimento);
//                    } else {
//                        vendaRec.getListaRecebimento().add(rec);
//                    }
//                    valorJaRecebido = vendaRec.getTotalRecebido();
//
//                    ControleVenda contV = new ControleVenda();
//
//                    if (valorJaRecebido >= vendaRec.getVendaTotal()) {
//
//                        double x = valorJaRecebido - vendaRec.getVendaTotal();
//                        Troco troco = new Troco(null, true, x);
//                        troco.setVisible(true);
//                        vendaRec.setStatus('F');
//                        contV.salvarAlteracao(vendaRec);
//                        dispose();
//                    } else {
//                        contV.salvarAlteracao(vendaRec);
//                    }
//                    formaValor.setValue(0);
//                } catch (NumberFormatException e) {
//                    JOptionPane.showMessageDialog(null, "DIGITE SOMENTE NUMEROS");
//                }
//
//                labTotalRecebido.setText(doubleString(valorJaRecebido));
//                labValorAReceber.setText(doubleString(vendaRec.getVendaTotal() - valorJaRecebido));
//            } else {
//                JOptionPane.showMessageDialog(null, "ENTRE COM O VALOR DO RECEBIMENTO.");
//            }
//
//        } else {
//            double valor = ((Number) formaValor.getValue()).doubleValue();
//            if (valor > 0) {
//                try {
//                    Recebimento rec = new Recebimento();
//                    formaValor.setValue(valor);
//                    rec.setValorRecebido(valor);
//                    rec.setDataRecebimento(hoje);
//                    rec.setHoraRecebimento(hoje);
//                    rec.setVendaCod(vendaRapida);
//                    rec.setCaixaCod(ControleCaixa.getCaixa());
//                  //  listaRecebimento.add(rec);
//                    if (boxFormaPag.getSelectedIndex() == 0) {
//                        rec.setFormaRecebimento('D');
//                    } else {
//                        rec.setFormaRecebimento('C');
//                    }
//                    if (null == vendaRapida.getListaRecebimento()) {
//                        listaRecebimento.clear();
//                        listaRecebimento.add(rec);
//                        vendaRapida.setListaRecebimento(listaRecebimento);
//                    } else {
//                        vendaRapida.getListaRecebimento().add(rec);
//                    }
//                    if (vendaRapida.getTotalRecebido() >= vendaRapida.getVendaTotal()) {
//                        double x = vendaRapida.getTotalRecebido() - vendaRapida.getVendaTotal();
//                        Troco troco = new Troco(null, true, x);
//                        troco.setVisible(true);
//                        dispose();
//                    }
//                    labTotalRecebido.setText(doubleString(vendaRapida.getTotalRecebido()));
//                    labValorAReceber.setText(doubleString(vendaRapida.getVendaTotal() - vendaRapida.getTotalRecebido()));
//                    formaValor.setValue(0);
//                } catch (NumberFormatException e) {
//                    JOptionPane.showMessageDialog(null, "ENTRE COM O VALOR DO PAGAMENTO!");
//                }
//            } else {
//
//            }
//        }
}
