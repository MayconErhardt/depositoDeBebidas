/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Fundamental.Orçamento;

import controle.ControleOrcamento;
import java.awt.Color;
import java.awt.Font;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import modelo.Orcamento;
import modelo.OrcamentoProduto;
import view.Fundamental.TelaIncialE;

/**
 *
 * @author Maycon
 */
public class OrcamentoList extends javax.swing.JDialog {

    /**
     * Creates new form OrcamentoList
     */
    private DefaultTableModel orcamentoTab;

    private ControleOrcamento contOrcamento = new ControleOrcamento();

    private ArrayList<Orcamento> listOrcamento = new ArrayList<>();

    private SimpleDateFormat formatar = new SimpleDateFormat("dd/MM/yyyy");

    private DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
    private DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();

    private Date hoje = new Date();

    public OrcamentoList(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        tabOrcamento.setFont(new Font("SansSerif", Font.BOLD, 14));

        direita.setBackground(new java.awt.Color(209, 209, 209));
        direita.setForeground(new java.awt.Color(102, 102, 102));
        esquerda.setBackground(new java.awt.Color(209, 209, 209));
        esquerda.setForeground(new java.awt.Color(102, 102, 102));
        Border emptyBorder = null;
        direita.setBorder(emptyBorder);
        tabOrcamento.getColumnModel().getColumn(1).setCellRenderer(direita);
        tabOrcamento.getColumnModel().getColumn(0).setCellRenderer(esquerda);
        txtNomeCliente.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.black));
        orcamentoTab = (DefaultTableModel) tabOrcamento.getModel();
        darTamanhoAColuna();
        jRadioAberto.setSelected(true);
        atualizarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        rSPanelGradiente1 = new rspanelgradiente.RSPanelGradiente();
        botFecharNormal = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabOrcamento = new rojerusan.RSTableMetro();
        jLabel2 = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        botLimpar = new javax.swing.JButton();
        rSPanelGradiente2 = new rspanelgradiente.RSPanelGradiente();
        jButton4 = new javax.swing.JButton();
        botNovo = new javax.swing.JButton();
        botAlterar = new javax.swing.JButton();
        botAprovarOrcamento = new javax.swing.JButton();
        botEntregar = new javax.swing.JButton();
        botDevolver = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jRadioAberto = new javax.swing.JRadioButton();
        jRadioAprovado = new javax.swing.JRadioButton();
        jRadioDevolver = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        rSPanelGradiente1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        botFecharNormal.setBackground(new java.awt.Color(255, 0, 0));
        botFecharNormal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/fechar34px.png"))); // NOI18N
        botFecharNormal.setContentAreaFilled(false);
        botFecharNormal.setFocusable(false);
        botFecharNormal.setOpaque(true);
        botFecharNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botFecharNormalActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ORÇAMENTOS");

        javax.swing.GroupLayout rSPanelGradiente1Layout = new javax.swing.GroupLayout(rSPanelGradiente1);
        rSPanelGradiente1.setLayout(rSPanelGradiente1Layout);
        rSPanelGradiente1Layout.setHorizontalGroup(
            rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rSPanelGradiente1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botFecharNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        rSPanelGradiente1Layout.setVerticalGroup(
            rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelGradiente1Layout.createSequentialGroup()
                .addGroup(rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botFecharNormal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabOrcamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome do Cliente", "Valor", "Data Realizada", "Data Vencimento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabOrcamento.setAltoHead(35);
        tabOrcamento.setColorBackgoundHead(new java.awt.Color(255, 255, 255));
        tabOrcamento.setColorFilasBackgound1(new java.awt.Color(209, 209, 209));
        tabOrcamento.setColorFilasBackgound2(new java.awt.Color(209, 209, 209));
        tabOrcamento.setColorFilasForeground1(new java.awt.Color(102, 102, 102));
        tabOrcamento.setColorFilasForeground2(new java.awt.Color(102, 102, 102));
        tabOrcamento.setColorForegroundHead(new java.awt.Color(51, 51, 51));
        tabOrcamento.setColorSelBackgound(new java.awt.Color(40, 53, 147));
        tabOrcamento.setFuenteFilas(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tabOrcamento.setFuenteFilasSelect(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tabOrcamento.setFuenteHead(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tabOrcamento.setGridColor(new java.awt.Color(204, 204, 204));
        tabOrcamento.setGrosorBordeFilas(0);
        tabOrcamento.setGrosorBordeHead(0);
        tabOrcamento.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tabOrcamento.setMultipleSeleccion(false);
        tabOrcamento.setOpaque(false);
        tabOrcamento.setRowHeight(30);
        tabOrcamento.setSelectionBackground(new java.awt.Color(40, 53, 147));
        tabOrcamento.setShowVerticalLines(false);
        tabOrcamento.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabOrcamento);
        if (tabOrcamento.getColumnModel().getColumnCount() > 0) {
            tabOrcamento.getColumnModel().getColumn(0).setResizable(false);
            tabOrcamento.getColumnModel().getColumn(1).setResizable(false);
            tabOrcamento.getColumnModel().getColumn(2).setResizable(false);
            tabOrcamento.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("NOME CLIENTE:");

        txtNomeCliente.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        txtNomeCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeClienteKeyReleased(evt);
            }
        });

        botLimpar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/limpar18px.png"))); // NOI18N
        botLimpar.setText("LIMPAR");
        botLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botLimparActionPerformed(evt);
            }
        });

        rSPanelGradiente2.setLayout(new java.awt.GridLayout(1, 0));

        jButton4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/voltar18px.png"))); // NOI18N
        jButton4.setText("VOLTAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        rSPanelGradiente2.add(jButton4);

        botNovo.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/novo18px.png"))); // NOI18N
        botNovo.setText("NOVO");
        botNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botNovoActionPerformed(evt);
            }
        });
        rSPanelGradiente2.add(botNovo);

        botAlterar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/edit18px.png"))); // NOI18N
        botAlterar.setText("ALTERAR");
        botAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botAlterarActionPerformed(evt);
            }
        });
        rSPanelGradiente2.add(botAlterar);

        botAprovarOrcamento.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botAprovarOrcamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/aprovar18px.png"))); // NOI18N
        botAprovarOrcamento.setText("APROVAR");
        botAprovarOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botAprovarOrcamentoActionPerformed(evt);
            }
        });
        rSPanelGradiente2.add(botAprovarOrcamento);

        botEntregar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botEntregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/entregar18px.png"))); // NOI18N
        botEntregar.setText("CONSIGNAR");
        botEntregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botEntregarActionPerformed(evt);
            }
        });
        rSPanelGradiente2.add(botEntregar);

        botDevolver.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botDevolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/devolver18px.png"))); // NOI18N
        botDevolver.setText("DEVOLVER");
        botDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botDevolverActionPerformed(evt);
            }
        });
        rSPanelGradiente2.add(botDevolver);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(rSPanelGradiente2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botLimpar))
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(rSPanelGradiente2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setText("ORÇAMENTOS EM:");

        jRadioAberto.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioAberto);
        jRadioAberto.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jRadioAberto.setText("Aberto");
        jRadioAberto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioAbertoActionPerformed(evt);
            }
        });

        jRadioAprovado.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioAprovado);
        jRadioAprovado.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jRadioAprovado.setText("Aprovado");
        jRadioAprovado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioAprovadoActionPerformed(evt);
            }
        });

        jRadioDevolver.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioDevolver);
        jRadioDevolver.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jRadioDevolver.setText("Devolver");
        jRadioDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioDevolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(20, 20, 20)
                .addComponent(jRadioAberto)
                .addGap(20, 20, 20)
                .addComponent(jRadioAprovado)
                .addGap(20, 20, 20)
                .addComponent(jRadioDevolver)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jRadioAberto)
                    .addComponent(jRadioAprovado)
                    .addComponent(jRadioDevolver))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanelGradiente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(rSPanelGradiente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botFecharNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botFecharNormalActionPerformed

        dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_botFecharNormalActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void botNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botNovoActionPerformed

//        Orcamento orc = null;
        OrcamentoNovo orcaNovo = new OrcamentoNovo(null, true, null);
        orcaNovo.setVisible(true);
        listOrcamento.clear();
        ControleOrcamento contOrc = new ControleOrcamento();
        listOrcamento.addAll(contOrc.listarTodosAberto());

        atualizarTabelaListaOrcamento(listOrcamento);


    }//GEN-LAST:event_botNovoActionPerformed

    private void botAprovarOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botAprovarOrcamentoActionPerformed

        if ((jRadioAberto.isSelected())) {

            int linhaAprovarOrcamento = -1;
            linhaAprovarOrcamento = tabOrcamento.getSelectedRow();
            if (linhaAprovarOrcamento != -1) {
                Orcamento orc = listOrcamento.get(linhaAprovarOrcamento);
                ControleOrcamento contOrc = new ControleOrcamento();
                Date hoje = new Date();
                orc.setDataAprovacao(hoje);
                contOrc.salvarAlteracao(orc);
                atualizarTabela();
            } else {
                JOptionPane.showMessageDialog(null, "SELECIONE UM ORÇAMENTO EM ABERTO \n"
                        + "               PARA SER APROVADO!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "IMPOSSÍVEL APROVAR O ORCAMENTO!");
        }

    }//GEN-LAST:event_botAprovarOrcamentoActionPerformed

    private void jRadioAbertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioAbertoActionPerformed

//        txtNomeCliente.setText("");
//        listOrcamento.clear();
//        ControleOrcamento orc = new ControleOrcamento();
//        listOrcamento.addAll(orc.listarTodosAberto());
        atualizarTabela();
    }//GEN-LAST:event_jRadioAbertoActionPerformed

    private void txtNomeClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeClienteKeyReleased

        if (jRadioAberto.isSelected()) {
            listOrcamento.clear();
            ControleOrcamento controleOrc = new ControleOrcamento();
            listOrcamento.addAll(controleOrc.listarOrcamentoAbertoPorNomeCliente(txtNomeCliente.getText()));
            atualizarTabelaListaOrcamento(listOrcamento);
        } else if (jRadioAprovado.isSelected()) {
            listOrcamento.clear();
            listOrcamento.addAll(contOrcamento.listarOrcamentoAprovadoPorNomeCliente(txtNomeCliente.getText()));
            atualizarTabelaListaOrcamento(listOrcamento);
        } else if (jRadioDevolver.isSelected()) {
            listOrcamento.clear();
            listOrcamento.addAll(contOrcamento.listarOrcamentoEntreguePorNomeCliente(txtNomeCliente.getText()));
            atualizarTabelaListaOrcamento(listOrcamento);
        }


    }//GEN-LAST:event_txtNomeClienteKeyReleased

    private void botLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botLimparActionPerformed
        txtNomeCliente.setText("");
        if (jRadioAberto.isSelected()) {
            listOrcamento.clear();
            ControleOrcamento controleOrc = new ControleOrcamento();
            listOrcamento.addAll(controleOrc.listarOrcamentoAbertoPorNomeCliente(txtNomeCliente.getText()));
            atualizarTabelaListaOrcamento(listOrcamento);
        } else if (jRadioAprovado.isSelected()) {
            listOrcamento.clear();
            listOrcamento.addAll(contOrcamento.listarOrcamentoAprovadoPorNomeCliente(txtNomeCliente.getText()));
            atualizarTabelaListaOrcamento(listOrcamento);
        } else if (jRadioDevolver.isSelected()) {

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_botLimparActionPerformed

    private void botAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botAlterarActionPerformed

        if (!jRadioDevolver.isSelected()) {
            if (!jRadioAprovado.isSelected()) {
                int linhaAlterarOrcamento = -1;

                linhaAlterarOrcamento = tabOrcamento.getSelectedRow();

                if (linhaAlterarOrcamento != -1) {
                    Orcamento o = new Orcamento();
                    o = listOrcamento.get(linhaAlterarOrcamento);
                    OrcamentoNovo orcamentoAlterar = new OrcamentoNovo(null, true, o);
                    orcamentoAlterar.setVisible(true);
                    atualizarTabela();

                } else {
                    JOptionPane.showMessageDialog(null, "SELECIONE UM ORCAMENTO PARA SER ALTERADO!");
                }
            } else {
                JOptionPane.showMessageDialog(null, "ORÇAMENTO JÁ APROVADO, IMPOSSÍVEL ALTERAR!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "ORÇAMENTO JÁ APROVADO, IMPOSSÍVEL ALTERAR!");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_botAlterarActionPerformed

    private void jRadioAprovadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioAprovadoActionPerformed
        txtNomeCliente.setText("");
        listOrcamento.clear();
        listOrcamento.addAll(contOrcamento.listarTodosAprovado());
        atualizarTabelaListaOrcamento(listOrcamento);
    }//GEN-LAST:event_jRadioAprovadoActionPerformed

    private void jRadioDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioDevolverActionPerformed

        txtNomeCliente.setText("");
        listOrcamento.clear();
        listOrcamento.addAll(contOrcamento.listarTodosEntregue());
        atualizarTabelaListaOrcamento(listOrcamento);


    }//GEN-LAST:event_jRadioDevolverActionPerformed

    private void botEntregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botEntregarActionPerformed

        if (jRadioAprovado.isSelected()) {
            int linhaSelecionadaParaEntrega = -1;

            linhaSelecionadaParaEntrega = tabOrcamento.getSelectedRow();

            if (linhaSelecionadaParaEntrega != -1) {
                Orcamento orca = new Orcamento();

                orca = listOrcamento.get(linhaSelecionadaParaEntrega);
                boolean falta = false;
                ControleOrcamento co = new ControleOrcamento();
                falta = co.verficarOrcamento(orca);
                if (falta == true) {
                    JOptionPane.showMessageDialog(null, "       PRODUTOS QUE ESTÃO NO ORÇAMENTO \n"
                                                + "  ESTÃO EM FALTA NO ESTOQUE, FAVOR VERIFICAR!");
                }

                orca.setDataEntrega(hoje);
                OrcamentoNovo nc = new OrcamentoNovo(null, rootPaneCheckingEnabled, orca);
                nc.setVisible(true);

                contOrcamento = new ControleOrcamento();
                txtNomeCliente.setText("");
                listOrcamento.clear();
                listOrcamento.addAll(contOrcamento.listarTodosAprovado());
                atualizarTabelaListaOrcamento(listOrcamento);
            } else {
                JOptionPane.showMessageDialog(null, "       SELECIONE UM ORÇAMENTO APROVADO \n"
                        + "PARA PODER REALIZAR A ENTREGA DO PRODUTO!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "SELECIONE À OPÇÃO DE ORÇAMENTO APROVADO!");
        }

    }//GEN-LAST:event_botEntregarActionPerformed

    private void botDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botDevolverActionPerformed

        if (jRadioDevolver.isSelected()) {
            int linhaDevolverProduto = -1;
            linhaDevolverProduto = tabOrcamento.getSelectedRow();
            if (linhaDevolverProduto != -1) {
                Orcamento orcamento = new Orcamento();
                orcamento = listOrcamento.get(linhaDevolverProduto);
                OrcamentoDevolverProduto orcDevolProd = new OrcamentoDevolverProduto(null, true, orcamento);
                orcDevolProd.setVisible(true);
                txtNomeCliente.setText("");
                listOrcamento.clear();
                listOrcamento.addAll(contOrcamento.listarTodosEntregue());
                atualizarTabelaListaOrcamento(listOrcamento);
            } else {
                JOptionPane.showMessageDialog(null, "SELECIONE UM ORÇAMENTO A DEVOLVER!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "IMPOSSÍVEL DEVOLVER UM ORÇAMENTO QUE NÃO FOI ENTREGUE!");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_botDevolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrcamentoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrcamentoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrcamentoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrcamentoList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                OrcamentoList dialog = new OrcamentoList(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botAlterar;
    private javax.swing.JButton botAprovarOrcamento;
    private javax.swing.JButton botDevolver;
    private javax.swing.JButton botEntregar;
    private javax.swing.JButton botFecharNormal;
    private javax.swing.JButton botLimpar;
    private javax.swing.JButton botNovo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioAberto;
    private javax.swing.JRadioButton jRadioAprovado;
    private javax.swing.JRadioButton jRadioDevolver;
    private javax.swing.JScrollPane jScrollPane1;
    private rspanelgradiente.RSPanelGradiente rSPanelGradiente1;
    private rspanelgradiente.RSPanelGradiente rSPanelGradiente2;
    private rojerusan.RSTableMetro tabOrcamento;
    private javax.swing.JTextField txtNomeCliente;
    // End of variables declaration//GEN-END:variables

    public void darTamanhoAColuna() {
        tabOrcamento.getColumnModel().getColumn(0).setPreferredWidth(400);
        tabOrcamento.getColumnModel().getColumn(1).setPreferredWidth(45);
        tabOrcamento.getColumnModel().getColumn(2).setPreferredWidth(65);

        //  seuScrollPane.setBorder(BorderFactory.createBevelBorder(0));
    }

    public String doubleString(double d) {

        Locale.setDefault(new Locale("pt", "BR"));
        DecimalFormat df = new DecimalFormat("#,##0.00", new DecimalFormatSymbols(new Locale("pt", "BR")));
        String s = df.format(d);
        return s;
    }

    private void atualizarTabela() {

        listOrcamento.clear();
        ControleOrcamento contOrc = new ControleOrcamento();
        listOrcamento.addAll(contOrc.listarTodosAberto());

        atualizarTabelaListaOrcamento(listOrcamento);

    }

    private void atualizarTabelaListaOrcamento(ArrayList<Orcamento> listaOrcamento) {

        while (orcamentoTab.getRowCount() > 0) {
            // apaga a primeira linha
            orcamentoTab.removeRow(0);
        }
        for (Orcamento o : listaOrcamento) {
            // adiciona uma linha na tabela
            // o object criado tem que ter a mesma quantidade
            // de elementos que foi definida na tabela, 
            // como também os mesmos tipos
            orcamentoTab.addRow(new Object[]{o.getClienteCod().getClienteNome(), doubleString(o.getValorOrc()), formatar.format(o.getDataRealizado()), formatar.format(o.getDataVencimento())});
        }
    }

}
