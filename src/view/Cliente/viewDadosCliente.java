/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.Cliente;

import controle.ControleCliente;
import java.awt.Color;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import modelo.Cliente;
//import org.eclipse.persistence.sdo.helper.extension.SDOUtil;
import validacao.ValidaCPF;
import validacao.ValidaCampos;
import static validacao.ValidaCampos.setMaxLength;

/**
 *
 * @author Maycon
 */
public class viewDadosCliente extends javax.swing.JDialog {

    /**
     * Creates new form viewDadosCliente
     */
    Cliente cliente;
    ControleCliente contCliente = new ControleCliente();
    boolean status;

    public viewDadosCliente(java.awt.Frame parent, boolean modal, Cliente cli, boolean consulta) {
        super(parent, modal);
        initComponents();

        validarCaracter();
        txtNome.requestFocus();
        
        if (consulta == true) {
            cliente = cli;
            setarAlterar();
            editar();
            //panelDados.setEnabled(false);
            botCancelar.setText("VOLTAR");
            botCancelar.setForeground(new Color(0, 0, 0));
            botCancelar.setIcon(new ImageIcon("C:\\Users\\Maycon\\Documents\\NetBeansProjects\\DepositoDeBebidas\\src\\imagem\\icons\\voltar18px.png"));
            botSalvar.setVisible(false);
            botCancelar.setRequestFocusEnabled(false);

        }
        if (cli == null) {
            status = false;
            cliente = new Cliente();
           
        } else {
            status = true;
            cliente = cli;
            setarAlterar();
        }
        editarTxts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneNome = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        botFechar1 = new javax.swing.JButton();
        panelDados = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtNomeDeRua = new javax.swing.JTextField();
        txtBairro = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNumeroRua = new javax.swing.JTextField();
        txtCidade = new javax.swing.JTextField();
        boxEstado = new javax.swing.JComboBox<>();
        formatCPF = new javax.swing.JFormattedTextField();
        formatTelefone = new javax.swing.JFormattedTextField();
        dateDataNascimento = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        formatRG = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEMail = new javax.swing.JTextField();
        rSPanelGradiente1 = new rspanelgradiente.RSPanelGradiente();
        botCancelar = new javax.swing.JButton();
        botSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        paneNome.setBackground(new java.awt.Color(26, 35, 126));
        paneNome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        paneNome.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cliente");

        botFechar1.setBackground(new java.awt.Color(26, 35, 126));
        botFechar1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        botFechar1.setForeground(new java.awt.Color(255, 255, 255));
        botFechar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/fecharr24px.png"))); // NOI18N
        botFechar1.setContentAreaFilled(false);
        botFechar1.setOpaque(true);
        botFechar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botFechar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paneNomeLayout = new javax.swing.GroupLayout(paneNome);
        paneNome.setLayout(paneNomeLayout);
        paneNomeLayout.setHorizontalGroup(
            paneNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneNomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 365, Short.MAX_VALUE)
                .addComponent(botFechar1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        paneNomeLayout.setVerticalGroup(
            paneNomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneNomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3))
            .addComponent(botFechar1)
        );

        panelDados.setBackground(new java.awt.Color(255, 255, 255));
        panelDados.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(40, 53, 147)));
        panelDados.setEnabled(false);

        jLabel4.setBackground(new java.awt.Color(204, 204, 255));
        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setText("Nome:");

        jLabel5.setBackground(new java.awt.Color(204, 204, 255));
        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setText("Data de Nascimento:");

        jLabel6.setBackground(new java.awt.Color(204, 204, 255));
        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel6.setText("CPF:");

        jLabel7.setBackground(new java.awt.Color(204, 204, 255));
        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel7.setText("Rua:");

        jLabel9.setBackground(new java.awt.Color(204, 204, 255));
        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel9.setText("Cidade:");

        jLabel10.setBackground(new java.awt.Color(204, 204, 255));
        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel10.setText("ESTADO:");

        jLabel12.setBackground(new java.awt.Color(204, 204, 255));
        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel12.setText("Telefone Celular:");

        jLabel13.setBackground(new java.awt.Color(204, 204, 255));
        jLabel13.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel13.setText("Bairro:");

        txtNome.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N

        txtNomeDeRua.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N

        txtBairro.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N

        jLabel8.setBackground(new java.awt.Color(204, 204, 255));
        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel8.setText("NÂº:");

        txtNumeroRua.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N

        txtCidade.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N

        boxEstado.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        boxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));

        try {
            formatCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        formatCPF.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N

        try {
            formatTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        formatTelefone.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N

        dateDataNascimento.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        dateDataNascimento.setMaxSelectableDate(new java.util.Date(253370775705000L));

        jLabel14.setBackground(new java.awt.Color(204, 204, 255));
        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel14.setText("RG:");

        try {
            formatRG.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        formatRG.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N

        jLabel11.setBackground(new java.awt.Color(204, 204, 255));
        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel11.setText("Email:");

        txtEMail.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N

        javax.swing.GroupLayout panelDadosLayout = new javax.swing.GroupLayout(panelDados);
        panelDados.setLayout(panelDadosLayout);
        panelDadosLayout.setHorizontalGroup(
            panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDadosLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelDadosLayout.createSequentialGroup()
                                        .addComponent(formatTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDadosLayout.createSequentialGroup()
                                        .addComponent(txtCidade)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(boxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDadosLayout.createSequentialGroup()
                                        .addComponent(txtNomeDeRua)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNumeroRua, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDadosLayout.createSequentialGroup()
                                        .addGap(0, 203, Short.MAX_VALUE)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(formatRG, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(panelDadosLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(txtBairro))
                            .addGroup(panelDadosLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNome)
                                    .addGroup(panelDadosLayout.createSequentialGroup()
                                        .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dateDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(formatCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(panelDadosLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(112, 112, 112)
                        .addComponent(txtEMail)))
                .addContainerGap())
        );
        panelDadosLayout.setVerticalGroup(
            panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDadosLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(dateDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(formatCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(formatRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtNomeDeRua, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtNumeroRua, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(formatTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEMail, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        rSPanelGradiente1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        rSPanelGradiente1.setColorPrimario(new java.awt.Color(40, 53, 147));
        rSPanelGradiente1.setColorSecundario(new java.awt.Color(26, 35, 126));
        rSPanelGradiente1.setGradiente(rspanelgradiente.RSPanelGradiente.Gradiente.HORIZONTAL);

        botCancelar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        botCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/cancel18px.png"))); // NOI18N
        botCancelar.setText("CANCELAR");
        botCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botCancelarActionPerformed(evt);
            }
        });

        botSalvar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        botSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/icons/salvar18px.png"))); // NOI18N
        botSalvar.setText("SALVAR");
        botSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        botSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rSPanelGradiente1Layout = new javax.swing.GroupLayout(rSPanelGradiente1);
        rSPanelGradiente1.setLayout(rSPanelGradiente1Layout);
        rSPanelGradiente1Layout.setHorizontalGroup(
            rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelGradiente1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(botCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        rSPanelGradiente1Layout.setVerticalGroup(
            rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelGradiente1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(rSPanelGradiente1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botCancelar)
                    .addComponent(botSalvar))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rSPanelGradiente1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(paneNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(rSPanelGradiente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botFechar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botFechar1ActionPerformed

        dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_botFechar1ActionPerformed

    private void botCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botCancelarActionPerformed

        cliente = null;
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_botCancelarActionPerformed

    private void botSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botSalvarActionPerformed

        if (formatCPF.getText().equals("   .   .   -  ") || txtBairro.getText().isEmpty() || txtNome.getText().isEmpty()
                || txtCidade.getText().isEmpty() || txtNumeroRua.getText().isEmpty() || formatTelefone.getText().equals("(   )     -    ") || dateDataNascimento.getDate() == null || txtNomeDeRua.getText().isEmpty() || txtEMail.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "PREENCHER TODOS AS INFORMAÃÃES");
        } else {
            if (status == false) {
                cliente.setClienteBairro(txtBairro.getText());
                cliente.setClienteNome(txtNome.getText());
                cliente.setClienteCidade(txtCidade.getText());
                cliente.setClienteRua(txtNomeDeRua.getText());
                try{
                cliente.setClienteRuaNumero(Integer.parseInt(txtNumeroRua.getText()));
                
                cliente.setClienteTelefoneCelular(formatTelefone.getText());
                cliente.setClienteEstado(boxEstado.getSelectedItem().toString());
                cliente.setClienteDataNascimento(dateDataNascimento.getDate());
                cliente.setClienteRG(formatRG.getText());
                if (!formatCPF.getText().equals("   .   .   -  ")) {
                    String cpf = formatCPF.getText();
                    cpf = cpf.replace(".", "");
                    cpf = cpf.replace("-", "");
                    if (!ValidaCPF.isCPF(cpf)) {
                        JOptionPane.showMessageDialog(null, "O CPF: " + formatCPF.getText() + " Ã© invalido");
                        formatCPF.requestFocus();
                        formatCPF.setValue("");
                    } else {
                        List<Cliente> CPF = contCliente.CPFIgual(formatCPF.getText());
                        //JOptionPane.showMessageDialog(null, CPF);
                        if (!CPF.isEmpty()) {
                            JOptionPane.showMessageDialog(null, "CPF JÃ CADASTRADO");
                        } else {
                            cliente.setClienteCPF(formatCPF.getText());

                            List<Cliente> nome = contCliente.buscarEmail(txtEMail.getText());
                            //JOptionPane.showMessageDialog(null, nome);
                            if (!nome.isEmpty()) {
                                JOptionPane.showMessageDialog(null, "EMAIL JÃ CADASTRADO");
                            } else {
                                if (txtEMail.getText().trim().isEmpty()) {

                                    //  JOptionPane.showMessageDialog(null, "Preencha todos os Campos com '*'");
                                } else {
                                    cliente.setClienteEmail(txtEMail.getText());
                                    contCliente.gravarNovo(cliente);

                                    dispose();

                                    //    JOptionPane.showMessageDialog(null, "Preencha todos os Campos com '*'");
                                }

                            }
                        }
                    }
                }
                }catch(NumberFormatException e){
                    JOptionPane.showMessageDialog(null, "PREENCHA O CAMPO NUMERO DA RUA COM NUMEROS");
                }
                
            } else {

              
                if (formatCPF.getText().equals("   .   .   -  ") || txtBairro.getText().isEmpty() || txtNome.getText().isEmpty()
                        || txtCidade.getText().isEmpty() || txtNumeroRua.getText().isEmpty() || formatTelefone.getText().equals("(   )     -    ") || dateDataNascimento.getDate() == null || txtNomeDeRua.getText().isEmpty() || txtEMail.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "PREENCHER TODOS AS INFORMAÃÃES");
                } else {
                    if (status == true) {
                        cliente.setClienteBairro(txtBairro.getText());
                        cliente.setClienteNome(txtNome.getText());
                        cliente.setClienteCidade(txtCidade.getText());
                        cliente.setClienteRua(txtNomeDeRua.getText());
                        try{
                        cliente.setClienteRuaNumero(Integer.parseInt(txtNumeroRua.getText()));
                        cliente.setClienteTelefoneCelular(formatTelefone.getText());
                        cliente.setClienteEstado(boxEstado.getSelectedItem().toString());
                        cliente.setClienteDataNascimento(dateDataNascimento.getDate());
                        cliente.setClienteRG(formatRG.getText());

                       
                        if (!formatCPF.getText().equals("   .   .   -  ")) {
                            String cpf = formatCPF.getText();
                            cpf = cpf.replace(".", "");
                            cpf = cpf.replace("-", "");
                            if (!ValidaCPF.isCPF(cpf)) {
                                JOptionPane.showMessageDialog(null, "O CPF: " + formatCPF.getText() + " Ã© invalido");
                                formatCPF.requestFocus();
                                formatCPF.setValue("");
                                
                            } else {
                              
                                if (cliente.getClienteCPF().equals(formatCPF.getText())) {
                                    cliente.setClienteCPF(formatCPF.getText());
                                    if (cliente.getClienteEmail().equals(txtEMail.getText())) {
                                        cliente.setClienteEmail(txtEMail.getText());
                                        contCliente.salvarAlteracao(cliente);
                                  
                                        dispose();
                                    } else {
                                        List<Cliente> Email = contCliente.buscarEmail(txtEMail.getText());
                                        //          
                                        if (Email.isEmpty()) {
                                            cliente.setClienteEmail(txtEMail.getText());
                                            contCliente.salvarAlteracao(cliente);
                                           
                                            dispose();
                                        } else {
                                            JOptionPane.showMessageDialog(null, "EMAIL JÃ CADASTRADO!");
                                        }
                                    }
                                } else {
                                    List<Cliente> CPF = contCliente.CPFIgual(formatCPF.getText());
                                    if (CPF.isEmpty()) {
                                        cliente.setClienteCPF(formatCPF.getText());
                                        if (cliente.getClienteEmail().equals(txtEMail.getText())) {
                                            cliente.setClienteEmail(txtEMail.getText());
                                            contCliente.salvarAlteracao(cliente);
                                            
                                            dispose();
                                        } else {
                                            List<Cliente> Email = contCliente.buscarEmail(txtEMail.getText());
                                            if (Email.isEmpty()) {
                                                cliente.setClienteEmail(txtEMail.getText());
                                                contCliente.salvarAlteracao(cliente);
                                              
                                                dispose();
                                            } else {
                                                JOptionPane.showMessageDialog(null, "EMAIL JÃ CADASTRADO!");
                                            }
                                        }

                                    } else {
                                        JOptionPane.showMessageDialog(null, "CPF JÃ CADASTRADO!");
                                    }
                                }
                            }
                        }
                        }catch(NumberFormatException e){
                            JOptionPane.showMessageDialog(null, "PREENCHA O CAMPO NUMERO DA RUA COM NUMEROS");
                        }
                    }
                        
                }

            }
        }
    }//GEN-LAST:event_botSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewDadosCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewDadosCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewDadosCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewDadosCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                viewDadosCliente dialog = new viewDadosCliente(new javax.swing.JFrame(), true, null, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botCancelar;
    private javax.swing.JButton botFechar1;
    private javax.swing.JButton botSalvar;
    private javax.swing.JComboBox<String> boxEstado;
    private com.toedter.calendar.JDateChooser dateDataNascimento;
    private javax.swing.JFormattedTextField formatCPF;
    private javax.swing.JFormattedTextField formatRG;
    private javax.swing.JFormattedTextField formatTelefone;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel paneNome;
    private javax.swing.JPanel panelDados;
    private rspanelgradiente.RSPanelGradiente rSPanelGradiente1;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtEMail;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNomeDeRua;
    private javax.swing.JTextField txtNumeroRua;
    // End of variables declaration//GEN-END:variables

    private void editarTxts() {
        formatCPF.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        formatTelefone.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
//        senhaConfirmar.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
//        senhaNova.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        txtBairro.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        txtCidade.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        txtEMail.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        txtNome.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        txtNomeDeRua.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        txtNumeroRua.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
        formatRG.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));

    }

    private void editar() {
        panelDados.setEnabled(false);

        txtBairro.setEditable(false);
        txtBairro.setBackground(Color.WHITE);
        txtNome.setEditable(false);
        txtNome.setBackground(Color.WHITE);
        txtCidade.setEditable(false);
        txtCidade.setBackground(Color.WHITE);
        txtEMail.setEditable(false);
        txtEMail.setBackground(Color.WHITE);
        txtNomeDeRua.setEditable(false);
        txtNomeDeRua.setBackground(Color.WHITE);
        txtNumeroRua.setEditable(false);
        txtNumeroRua.setBackground(Color.WHITE);
        formatCPF.setEditable(false);
        formatCPF.setBackground(Color.WHITE);
        formatTelefone.setEditable(false);
        formatTelefone.setBackground(Color.WHITE);
        boxEstado.setEnabled(false);
        boxEstado.setBackground(Color.WHITE);
        dateDataNascimento.setEnabled(false);
        dateDataNascimento.setBackground(Color.WHITE);
//        senhaNova.setText(Cliente.getFuncionarioSenha());
//        senhaConfirmar.setText(Cliente.getFuncionarioSenha());
        formatRG.setEditable(false);
        formatRG.setBackground(Color.WHITE);
        editarTxts();
    }

    private void setarAlterar() {
        txtBairro.setText(cliente.getClienteBairro());
        txtNome.setText(cliente.getClienteNome());
        txtCidade.setText(cliente.getClienteCidade());
        txtEMail.setText(cliente.getClienteEmail());
        txtNomeDeRua.setText(cliente.getClienteRua());
        txtNumeroRua.setText(String.valueOf(cliente.getClienteRuaNumero()));
        formatCPF.setText(cliente.getClienteCPF());
        formatTelefone.setText(cliente.getClienteTelefoneCelular());
        boxEstado.setSelectedItem(cliente.getClienteEstado());
        dateDataNascimento.setDate(cliente.getClienteDataNascimento());
//        senhaNova.setText(Cliente.getFuncionarioSenha());
//        senhaConfirmar.setText(Cliente.getFuncionarioSenha());
        formatRG.setText(cliente.getClienteRG());
    }

//    public static void setMaxLength(JTextField txt, int max) {
//        txt.addKeyListener(new java.awt.event.KeyAdapter() {
//            @Override
//            public void keyPressed(java.awt.event.KeyEvent evt) {
//                if (txt.getText().length() > max - 1) {
//                    txt.setText(txt.getText().substring(0, txt.getText().length() - 1));
//                }else{
//                    
//                }
//            }
//        });
//
//    }

    
    private void validarCaracter(){
        setMaxLength(txtNome, 45);
        setMaxLength(txtCidade, 45);
        setMaxLength(txtNomeDeRua, 45);
        setMaxLength(txtBairro, 45);
        setMaxLength(txtEMail,45);        
        
    }
}
